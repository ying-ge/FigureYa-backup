##绘制该circos的脚本共由7个部分组成，分别是：1）Part1. 最开始的基本设置；2）Part2. 染色体标签绘制；3）Part3. 热图绘制；4）Part4. 柱状图绘制##########
###################################  5）Part5. 背景色绘制；6）Part6. 连接线绘制；7）Part7. 最后的导入模块设置 #####################################
##具体内容如下：###################################################################################################################################
##Part1: Basic sets 这部分主要开启设置要展示的内容和要展示的染色体之间的间距和半径设置，一号染色体叫hs1，二号叫hs2

##Part2: Plot chromsome on circos resbectively 这部分设置要展示在染色体上的标签内容，原图要展示的内容并不是两条染色体，而是GSH和GSL显著性差异（Wilcox检验）
## 的KOs（KEGG Orthology）与每个KO对应的KEGG B分类的关系，所以我把KOs当作一条染色体，KEGG二级分类当作一条染色体绘制

##Part3: Plot heatmap of KO relative abundance onto circos one by one from GS1-GS10 这部分用热图展示每个样本与统计到的显著性差异KOs间的相对丰度，这部分
##的难点在于颜色梯度的设置，从原图Fig4.b可以看到图例中的颜色梯度不是线性均匀变化的，也就是数值区间不是均匀的，所以就需要设置规则 (rules) 来对不同数值区间设置不同的颜色梯度
## 这里的颜色梯度我是用取色器从原文的图例中一个一个取得，因为circos本身不带有这种较荧光色的颜色，需要自己设置。这里的<rules>规则在每个GS中都是完全相同的，
## 会造成代码的一些冗长，但是也利于后面如果需要修改某一个区间的颜色梯度，其实也可以写成函数在每个plot模块的rule中引用，但是这样的话每个模块的规则都一致了不利于对单独热图规则设置

##Part4: Plot number of  KO number (KEGG level2) of GSH and GSL in chromosome hs2 by histogram 这部分展示GSH和GSL的KOs分别在相应KEGG B分类中的
##统计数目并用柱状图展示

##Part5: Plot the background colors in hs2 with highlight 这部分主要绘制KEGG B分类的背景色，利用highlight对每个B分类指定相应区域和颜色

##Part6: Plot the links between KO numbers and KEGG B level 绘制每个显著性KO与相应KEGG B或叫二级分类的连接线

##Part7: Final end include block and parameter 最后的一些必需的include模块导入和一个染色体角度设置，设置angle可以旋转圈图

##### 使用方法：当需要修改某部分时或者要导入自己的数据时，利用ctrl+F搜索相应的“Part”，比如我要修改links，就搜索“Part6”，
##### 然后对Part6的内容进行修改。注：修改前最好将原始的circos.conf配置文件备份 ########################################


##Part1. Basic sets #################################################################################
#### Declare what going to plot #####################################################################
show_links 				= yes
show_highlights			= yes
show_text				= yes
show_heatmaps			= yes
show_scatter			= yes
show_histogram			= yes
show_lines				= yes
use_rules 				= yes



#### some parameter for chromosome specific ##########################################################
#### and  some parameter include in ideogram and ticks block #########################################
karyotype = data/karyotype.txt
chromosomes_units				= 1
chromosomes_display_default		= yes
chromosomes_radius          	= hs1:0.70r;hs2:0.70r;              # relative radius, also could be parameter by absolute radius
																	# this parameter the circos that is shown 
																	# hs1 means KOs' circos; hs2 means KEGG levels' circos




<plots>

######################################################################################################
## Part2. Plot chromsome on circos resbectively ######################################################

## part2.1 {0.86r-0.96r} plot hs1 chromosome's text ##################################################
<plot>
chromosomes_display_default		= no                          # this parameter means chromosome are not all displayed
chromosomes 					= hs1			              # parameter for chromsome hs1 (KOs)
show							= conf(show_text)		      # show text(KOs) on circos
type							= text
file							= data/KO_orthology_text.txt
r0								= 0.86r				          # text radius inner
r1								= 0.96r				          # text radius external
label_size						= 17p
label_font						= condensed
#rpadding						= 0r                          # Radial filling while text overlap
#padding						= 0r				          # Coner filling while text overlap
label_snuggle					= yes				          # Snuggle text while they overlap
max_snuggle_distance			= 2r
#snuggle_sampling				= 1
#snuggle_tolerance				= 0.25r
</plot>

##part2.2  {1.54r-1.74r}plot hs2 chromosome's text####################################################
<plot>
chromosomes_display_default		= no
chromosomes 					= hs2
show							= conf(show_text)
type							= text
file							= data/class_text.txt
color							= black
r0								= 1.5r
r1								= 1.6r
label_size						= 16p
label_font						= condensed
#rpadding						= 0r
#padding						= 0r
label_snuggle					= yes
max_snuggle_distance			= 2r
</plot>

#####################################################################################################################
###Part 3 Most important part: plot heatmap of KO relative abundance onto circos one by one from GS1-GS10############
###Among them, GS1~GS5 belong to GSH, GS6~GS10 belong to GSL ########################################################

##part3.1 {1.468r-1.518r} plot heatmap of GS1 #######################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS1.txt
min 				= 0.00013                               #For this parameter, you should know the minimun in "Deal_KOs.xlsx",for instance, min is equal to the most close five significant digits smaller than minimun
max 				= 0.0027                                #This is close to min, max is equal to the most close four significant digits larger than maximun
r0					= 1.468r                                #####################################################
r1					= 1.518r								# This four parameters set the color block position #
stroke_color		= white			    					# and white blanck size between blocks and GSs 		#
stroke_thickness	= 2p			    					#####################################################

<rules>
use 				= conf(use_rules)		#rules are used to plot numbers mapped onto color gradients
											# owing to the legend in Fig4.b, numbers are not mapped onto color gradients in a linear mode
											# so, dividing numbers into different interval correlated to different color gradients
											# here, dividing legend into five different color gradients
											# and this <rules> is same in every GS heatmap block 

# remap the heatmap value from the range [a,b] onto the index [i,j], then
# use the index to select the color from the list
# i got the color (rgb numbers) from Fig4.b by "ColorSchemerColorPix.exx" or "TakeColor.exe"
# 
# Perl syntax for referencing an element of a list is qw(a b c d)[index]
# where index starts at 0.
# In the following, the corresponding color gradients in legend pf Fig4.b are taken according to different numerical intervals.

<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025		
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>

</plot>

##Next, GS2~GS10 is similar to GS1, particularly, <rules> block are exactly the same as that of GS1####################
##part3.2 {1.416r-1.466r} plot heatmap of GS2 #########################################################################

<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS2.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.416r
r1					= 1.466r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>
</plot>

##part3.3 {1.364r-1.414r} plot heatmap of GS3 ######################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS3.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.364r
r1					= 1.414r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>

</plot>

##part3.4 {1.312r-1.362r} plot heatmap of GS4 #######################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS4.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.312r
r1					= 1.362r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>

</plot>

##part3.5 {1.26r-1.31r} plot heatmap of GS5 #############################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS5.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.26r
r1					= 1.31r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>
</plot>

##part3.6 {1.208r-1.258r} plot heatmap of GS6 #####################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS6.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.208r
r1					= 1.258r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>

</plot>

##part3.7 {1.156r-1.206r} plot heatmap of GS7 #######################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS7.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.156r
r1					= 1.206r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>

</plot>

##part 3.8 {1.104r-1.154r} plot heatmap of GS8 ######################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS8.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.104r
r1					= 1.154r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>

</plot>

##part3.9 {1.052r-1.102r} plot heatmap of GS9 ####################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS9.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.052r
r1					= 1.102r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>
</plot>

##part3.10 {1.00r-1.05r} plot heatmap of GS10 #######################################################################
<plot>
show				= conf(show_heatmaps)
type				= heatmap
file				= data/GS10.txt
min 				= 0.00013
max 				= 0.0027
r0					= 1.00r
r1					= 1.05r
stroke_color		= white
stroke_thickness	= 2p

<rules>
use 				= conf(use_rules)
<rule>
condition 			= var(value) > 0.00013 && var(value) < 0.00025
color 				= eval(qw(rgb(1,20,244) rgb(0,56,255) rgb(1,92,209) rgb(0,122,192) rgb(0,156,175)) [remap_round(var(value),0.00013,0.00025,0,4)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.00025 && var(value) < 0.0005
color 				= eval(qw(rgb(0,173,169) rgb(1,214,150) rgb(0,245,130) rgb(21,254,127) rgb(54,254,129) rgb(92,255,130)) [remap_round(var(value),0.00025,0.0005,0,5)])
flow 				= continue if false
</rule>

<rule>
condition 			= var(value) >= 0.0005 && var(value) < 0.001
color 				= eval(qw(rgb(92,255,127) rgb(130,255,127) rgb(164,255,126) rgb(197,255,128) rgb(235,255,129) rgb(255,241,122)) [remap_round(var(value),0.0005,0.001,0,5)])
flow 				= continue  id false
</rule>

<rule>
condition 			= var(value) >= 0.001 && var(value) < 0.002
color 				= eval(qw(rgb(255,241,122) rgb(254,200,100) rgb(255,165,82) rgb(255,132,65) rgb(255,94,47) rgb(254,64,32)) [remap_round(var(value),0.001,0.002,0,5)])
flow 				= continue  if false
</rule>

<rule>
condition 			= var(value) >= 0.002
color 				= eval(qw(rgb(254,64,32) rgb(255,33,16) rgb(255,12,6)) [remap_round(var(value),0.002,0.0027,0,2)])
flow 				= stop
</rule>

</rules>
</plot>

#################################################################################################################
##Part4 Plot histogram number of  ko number (KEGG level2) in chromosome hs2######################################
##GSH and GSL are separate,so, need to plot two histogram########################################################

#part4.1 GSL histogram1##########################################################################################
<plot>
chromosomes_display_default		= no
chromosomes     				= hs2
show_histogram					= yes
show							= conf(show_histogram)
type							= histogram
file							= data/hist_GSL.txt
extend_bin 						= no
min								= 0
max								= 20
# aN means transparency is N/6, for instance 5/6 = 83%
color 							= no
fill_color						= green
background_color  				= yellow
r0								= 1.0r
r1								= 1.2r
orientation						= in

<axes>
show							= data
<axis>
spacing							= 20
thickness						= 4
color							= black
</axis>

<axis>
spacing							= 10
thickness						= 1
color							= grey
position_skip					= 1.0r,1.2r
</axis>

</axes>
</plot>


# part4.2 GSH histogram2###################################################################################
<plot>
chromosomes_display_default		= no
chromosomes     				= hs2
show_histogram					= yes
show							= conf(show_histogram)
type							= histogram
file							= data/hist_GSH.txt
extend_bin 						= no
min								= 0
max								= 8
color 							= no
fill_color						= red
r0								= 1.25r
r1								= 1.45r
orientation						= in

<backgrounds>
show				= data
<background>
<rules>
<rule>
condition  			=  var(start2) < 80 || var(start2) > 44
color				= yellow
</rule>
</rules>
y0					= 0
y1					= 8
</background>
</backgrounds>

<axes>
show				= data
<axis>
spacing				= 8
thickness			= 4
color				= black

</axis>
<axis>
spacing				= 4
thickness			= 1
color				= grey
position_skip		= 1.25r,1.45r
</axis>

</axes>
</plot>

# part 4.3 this histogram3 want to plot the black arc line with scale in hs2#####################################
<plot>
chromosomes_display_default		= no
chromosomes     				= hs2
show_histogram					= yes
show				= conf(show_histogram)
type				= histogram
file				= data/hist_3.txt
extend_bin 			= no
min					= 0
max					= 8
color 				= no
fill_color			= red
r0					= 0.86r
r1					= 1.00r
orientation			= in
<axes>
show				= data
<axis>
spacing				= 8
thickness			= 4
color				= black
</axis>
</axes>
</plot>

</plot>


###################################################################################################################
##Part5 Plot the background colors in hsa with highlight ##########################################################

# plot highlights##################################################################################################
<highlights>
<highlight>
file       				= data/highlight.txt          # this block plot background color in hs2
r0         				= 0.91r
r1         				= 1.48r
</highlight>

<highlight>
file       				= data/light_border.txt	      # this block plot the separate black border line between GSH and GSL
stroke_color 			= black
stroke_thickness 		= 5
</highlight>

</highlights>




#################################################################################################################
##Part6 Plot the links between KO numbers and KEGG B level ######################################################
##plot links#####################################################################################################
<links>
show_links					= yes
show						= conf(show_links)
ribbon						= yes                    # links connect type
flat						= yes
radius						= 0.83r
thickness 					= 2
alpha 						= 60
bezier_radius				= 0.18r
bezier_radius_purity 		= 1.85
cparameter 					= 1

<link>
file 						= data/links.txt
</link>

</links>


  
###### Part7 Final end include block and parameter ###############################################################
<<include ideogram.conf>>
<<include ticks.conf>>

<image>
angle_offset* 				= 60      		  		# this parameter control the angle of two chromosomes
<<include etc/image.conf>>
</image>

<<include etc/colors_fonts_patterns.conf>>

<<include etc/housekeeping.conf>>












































03_cell2location_mapping
In [1]:
import
scanpy
as
sc
import
numpy
as
np
import
pandas
as
pd
import
matplotlib.pyplot
as
plt
import
matplotlib
as
mpl
import
cell2location
from
matplotlib
import
rcParams
rcParams
[
'pdf.fonttype'
]
=
42
# enables correct plotting of text for PDFs
In [2]:
results_folder
=
'./results/'
# create paths and names to results folders for reference regression and cell2location models
ref_run_name
=
f
'
{
results_folder
}
/reference_signatures'
run_name
=
f
'
{
results_folder
}
/cell2location_map'
Load datasets
¶
In [3]:
# Read data
adata_vis
=
sc
.
read
(
"data/visium_merge_inter_upload.h5ad"
)
In [4]:
adata_vis
Out[4]:
important
注意adata_vis的数据结构：
切片图像保存于
adata_vis.uns['spatial']
在cell2location中，切片转录组默认使用
adata_vis.obs['sample']
用于区分不同切片的数据
修改
adata_vis.uns['spatial']
的key值使之和
adata_vis.obs['sample']
保持一致，这样才能使用
select_slide
函数subset切片
In [5]:
for
k
in
list
(
adata_vis
.
uns
[
'spatial'
]
.
keys
()):
adata_vis
.
uns
[
'spatial'
][
k
.
split
(
'_'
)[
3
]]
=
adata_vis
.
uns
[
'spatial'
]
.
pop
(
k
)
In [6]:
list
(
adata_vis
.
uns
[
'spatial'
]
.
keys
())
Out[6]:
In [7]:
adata_vis
.
obs
[[
'sample'
,
'donor_id'
]]
.
value_counts
()
Out[7]:
导入上一步的结果：reference signature
In [8]:
inf_aver
=
pd
.
read_csv
(
f
"
{
ref_run_name
}
/inf_aver.csv"
,
index_col
=
0
)
inf_aver
.
head
()
Out[8]:
ACKR+_EC
Activated KRT+ NK
Activated NK
Activated_B-AREG
Activated_B-RHOB
CCL5+_EC
CD
CD4+T_Act-CCL5
CD4+T_Act-CH25H
CD4+T_Act-CXCR4
...
TR Mac.3
Type A intercalated cell
Type B intercalated cell
cDC1
cDC2
cir_NK-PTGDS
cir_NK-S100B
gdT_Vd1
gdT_Vd2
pDC
FO538757.2
0.095478
0.090512
0.110985
0.055967
0.075919
0.074606
0.149572
0.084705
0.095956
0.096498
...
0.128304
0.104031
0.250288
0.090729
0.136187
0.130000
0.084518
0.122680
0.083116
0.134055
NOC2L
0.138662
0.127062
0.117580
0.117451
0.114746
0.082101
0.170084
0.105224
0.101670
0.108131
...
0.028709
0.076386
0.117015
0.069693
0.090842
0.123789
0.110760
0.140441
0.105666
0.130683
PERM1
0.002008
0.000344
0.000227
0.001351
0.002163
0.003590
0.025246
0.001045
0.008251
0.000158
...
0.003109
0.005901
0.482280
0.000646
0.001460
0.000493
0.003901
0.001227
0.000922
0.001944
HES4
0.011849
0.006743
0.051286
0.004431
0.004672
0.239193
0.127295
0.005886
0.009522
0.002642
...
0.009600
0.007545
0.044294
0.013336
0.001851
0.074820
0.109686
0.005783
0.001141
0.012366
ISG15
0.412864
0.386006
0.502053
0.174437
0.136781
0.391983
0.042844
0.363116
0.340214
0.340523
...
0.354593
0.026318
0.085551
0.235624
0.197040
0.441866
0.612398
0.588833
0.357066
0.088883
5 rows × 103 columns
对参考数据和空转数据中基因取交集
In [9]:
adata_vis
.
var
.
head
()
Out[9]:
feature_types
genome
SYMBOL
mt
n_cells_by_counts-6800STDY12499406
mean_counts-6800STDY12499406
log1p_mean_counts-6800STDY12499406
pct_dropout_by_counts-6800STDY12499406
total_counts-6800STDY12499406
log1p_total_counts-6800STDY12499406
...
log1p_mean_counts-6800STDY12499508
pct_dropout_by_counts-6800STDY12499508
total_counts-6800STDY12499508
log1p_total_counts-6800STDY12499508
n_cells_by_counts-6800STDY12499509
mean_counts-6800STDY12499509
log1p_mean_counts-6800STDY12499509
pct_dropout_by_counts-6800STDY12499509
total_counts-6800STDY12499509
log1p_total_counts-6800STDY12499509
ENSEMBL
ENSG00000243485
Gene Expression
GRCh38
MIR1302-2HG
False
0
0.000000
0.000000
100.000000
0.0
0.000000
...
0.000353
99.964677
1.0
0.693147
0
0.000000
0.000000
100.000000
0.0
0.000000
ENSG00000237613
Gene Expression
GRCh38
FAM138A
False
0
0.000000
0.000000
100.000000
0.0
0.000000
...
0.000000
100.000000
0.0
0.000000
0
0.000000
0.000000
100.000000
0.0
0.000000
ENSG00000186092
Gene Expression
GRCh38
OR4F5
False
0
0.000000
0.000000
100.000000
0.0
0.000000
...
0.000000
100.000000
0.0
0.000000
0
0.000000
0.000000
100.000000
0.0
0.000000
ENSG00000238009
Gene Expression
GRCh38
AL627309.1
False
4
0.001193
0.001193
99.880668
4.0
1.609438
...
0.002822
99.717414
8.0
2.197225
1
0.000356
0.000356
99.964425
1.0
0.693147
ENSG00000239945
Gene Expression
GRCh38
AL627309.3
False
0
0.000000
0.000000
100.000000
0.0
0.000000
...
0.000000
100.000000
0.0
0.000000
0
0.000000
0.000000
100.000000
0.0
0.000000
5 rows × 100 columns
In [10]:
is_dup
=
adata_vis
.
var
[
"SYMBOL"
]
.
duplicated
()
.
tolist
()
symbol
=
adata_vis
.
var
[
"SYMBOL"
]
.
tolist
()
ensembl
=
adata_vis
.
var
.
index
.
tolist
()
uni_symbol
=
[(
symbol
[
i
]
+
"_"
+
ensembl
[
i
])
if
is_dup
[
i
]
else
symbol
[
i
]
for
i
in
range
(
len
(
is_dup
))]
In [11]:
adata_vis
.
var_names
=
uni_symbol
In [12]:
adata_vis
.
var
.
head
()
Out[12]:
feature_types
genome
SYMBOL
mt
n_cells_by_counts-6800STDY12499406
mean_counts-6800STDY12499406
log1p_mean_counts-6800STDY12499406
pct_dropout_by_counts-6800STDY12499406
total_counts-6800STDY12499406
log1p_total_counts-6800STDY12499406
...
log1p_mean_counts-6800STDY12499508
pct_dropout_by_counts-6800STDY12499508
total_counts-6800STDY12499508
log1p_total_counts-6800STDY12499508
n_cells_by_counts-6800STDY12499509
mean_counts-6800STDY12499509
log1p_mean_counts-6800STDY12499509
pct_dropout_by_counts-6800STDY12499509
total_counts-6800STDY12499509
log1p_total_counts-6800STDY12499509
MIR1302-2HG
Gene Expression
GRCh38
MIR1302-2HG
False
0
0.000000
0.000000
100.000000
0.0
0.000000
...
0.000353
99.964677
1.0
0.693147
0
0.000000
0.000000
100.000000
0.0
0.000000
FAM138A
Gene Expression
GRCh38
FAM138A
False
0
0.000000
0.000000
100.000000
0.0
0.000000
...
0.000000
100.000000
0.0
0.000000
0
0.000000
0.000000
100.000000
0.0
0.000000
OR4F5
Gene Expression
GRCh38
OR4F5
False
0
0.000000
0.000000
100.000000
0.0
0.000000
...
0.000000
100.000000
0.0
0.000000
0
0.000000
0.000000
100.000000
0.0
0.000000
AL627309.1
Gene Expression
GRCh38
AL627309.1
False
4
0.001193
0.001193
99.880668
4.0
1.609438
...
0.002822
99.717414
8.0
2.197225
1
0.000356
0.000356
99.964425
1.0
0.693147
AL627309.3
Gene Expression
GRCh38
AL627309.3
False
0
0.000000
0.000000
100.000000
0.0
0.000000
...
0.000000
100.000000
0.0
0.000000
0
0.000000
0.000000
100.000000
0.0
0.000000
5 rows × 100 columns
In [13]:
# find shared genes and subset both anndata and reference signatures
intersect
=
np
.
intersect1d
(
adata_vis
.
var_names
,
inf_aver
.
index
)
adata_vis
=
adata_vis
[:,
intersect
]
.
copy
()
inf_aver
=
inf_aver
.
loc
[
intersect
,
:]
.
copy
()
In [14]:
adata_vis
.
shape
,
inf_aver
.
shape
Out[14]:
The reference signature model was further used by cell2location to estimate spatial abundance of cell
types. We kept genes that were shared with scRNA-seq and estimated the abundance of cell types in tumor core and interface
groups respectively. In this step, cell2location was used with the following parameter settings:
training iterations: 20,000,
number of cells per location N = 20,
‘detection_alpha’ = 200
In [15]:
# prepare anndata for cell2location model
cell2location
.
models
.
Cell2location
.
setup_anndata
(
adata
=
adata_vis
,
batch_key
=
"sample"
)
In [16]:
# create and train the model
mod
=
cell2location
.
models
.
Cell2location
(
adata_vis
,
cell_state_df
=
inf_aver
,
# the expected average cell abundance: tissue-dependent
# hyper-prior which can be estimated from paired histology:
N_cells_per_location
=
20
,
# hyperparameter controlling normalisation of
# within-experiment variation in RNA detection:
detection_alpha
=
200
)
mod
.
view_anndata_setup
()
这里我们使用一个较小的迭代次数，减小模型训练时间
In [ ]:
## 使用GPU训练
# import torch
# if torch.cuda.is_available():
#     mod.train(max_epochs=10000, batch_size=None, train_size=1, use_gpu=True)
In [17]:
mod
.
train
(
max_epochs
=
10000
,
# train using full data (batch_size=None)
batch_size
=
None
,
# use all data points in training because
# we need to estimate cell abundance at all locations
train_size
=
1
,
use_gpu
=
False
,
)
# plot ELBO loss history during training, removing first 100 epochs from the plot
mod
.
plot_history
(
1000
)
plt
.
legend
(
labels
=
[
'full data training'
]);
cell2location最终的结果是输出一个后验概率，用来表示spot中不同细胞类型的丰度。
最终的结果存储在
adata_vis.obsm
中。
注意： cell2location给出的每种细胞在每个spot中的后验概率其实是一个分布。export_posterior函数输出的是这个分布的均值，5%分位数，95%分位数来代表这个分布。
In [18]:
# In this section, we export the estimated cell abundance (summary of the posterior distribution).
adata_vis
=
mod
.
export_posterior
(
adata_vis
,
sample_kwargs
=
{
'num_samples'
:
1000
,
'batch_size'
:
mod
.
adata
.
n_obs
,
'use_gpu'
:
False
}
)
# Save model
mod
.
save
(
f
"
{
run_name
}
"
,
overwrite
=
True
)
# mod = cell2location.models.Cell2location.load(f"{run_name}", adata_vis)
# Save anndata object with results
adata_file
=
f
"
{
run_name
}
/sp.h5ad"
adata_vis
.
write
(
adata_file
)
adata_file
Out[18]:
散点图具有正相关的趋势说明模型可以用来解释数据
In [19]:
mod
.
plot_QC
()
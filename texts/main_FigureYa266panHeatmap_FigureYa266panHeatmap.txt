FigureYa266panHeatmap
FigureYa266panHeatmap
Author(s)
: Xiaofan Lu; Yasi Zhang
Reviewer(s)
: Ying Ge
Date
: 2025-05-20
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Demand description
复现Figure1的EF，希望能用原始数据。
Replicate Figure 1E-F using raw data where possible.
出自：
https://molecular-cancer.biomedcentral.com/articles/10.1186/s12943-019-1066-3
图1 m6A调控因子的泛癌遗传学及表达改变 e
17种癌症类型中m6A调控因子的基因表达改变。热图显示倍数变化，红色代表上调基因，蓝色代表下调基因。
f 箱线图展示IGF2BP3在15种癌症类型的肿瘤和正常样本中的表达分布。
Source:
https://molecular-cancer.biomedcentral.com/articles/10.1186/s12943-019-1066-3
Fig. 1 Pan-cancer genetic and expression alterations of m6A
regulators. e The gene expression alterations of m6A regulators in 17
cancer types. The heat map shows the fold changes, with red representing
up-regulated genes, and blue representing down-regulated genes. f Box
plots showing the expression distribution of IGF2BP3 across tumor and
normal samples in 15 cancer types.
应用场景
Application scenarios
对泛癌中肿瘤与正常样本做多个基因（m6A为例）的差异表达分析，并根据log2FoldChange值绘制泛癌热图，同时对感兴趣基因绘制泛癌箱型图。
如果想换成泡泡图结合柱形图，可参考FigureYa263panDiff
如果想用GSEA计算并展示多个
基因集
的差异表达，可参考FigureYa253panGSEA
如果只对单个基因感兴趣，可参考FigureYa55panCancer_violin，画成小提琴图或box
plot，FigureYa55plus_pancancer_boxplot。
另外，我们还实现过这篇文章的其他几个有意思的图：
Fig.1D对角热图，可参考FigureYa144DiagHeatmap
Fig.2A靶向关系连线图，可参考FigureYa199crosslink，带你实现连线自由
Fig.3A基因集的survival
landscape，可参考FigureYa210survivalScape
Perform differential expression analysis of multiple genes (using m6A
as an example) between tumor and normal samples across pan-cancer
datasets, and generate pan-cancer heatmaps based on log2FoldChange
values, along with pan-cancer box plots for genes of interest.
To switch to bubble charts combined with bar plots, refer to
FigureYa263panDiff
To use GSEA for calculating and displaying differential expression of
multiple gene sets
, refer to FigureYa253panGSEA
If only interested in a single gene, refer to
FigureYa55panCancer_violin to create violin plots or box plots
FigureYa55plus_pancancer_boxplot.
Additionally, we have crowdsourced several other interesting figures
from this article:
Fig.1D diagonal heatmap, refer to FigureYa144DiagHeatmap
Fig.2A target relationship connection diagram, refer to
FigureYa199crosslink, achieving connection freedom
Fig.3A survival landscape of gene sets, refer to
FigureYa210survivalScape
环境设置
Environment Setup
source("install_dependencies.R")
library(data.table)
library(impute)
library(ClassDiscovery)
library(ComplexHeatmap)
source("twoclasslimma.R")

# 显示英文报错信息
# Show English error messages
Sys.setenv(LANGUAGE = "en") 

# 禁止chr转成factor
# Prevent character-to-factor conversion
options(stringsAsFactors = FALSE)
输入文件
Input Files
跟FigureYa253panGSEA、FigureYa263panDiff、FigureYa265panCNV使用的是同一套输入数据，已经下载的小伙伴就不用重复下载了。
merged_sample_quality_annotations.tsv: 下载自
https://gdc.cancer.gov/about-data/publications/pancanatlas
，下载地址
http://api.gdc.cancer.gov/data/1a7d7be8-675d-4e60-a105-19d4121bdebf
EBPlusPlusAdjustPANCAN_IlluminaHiSeq_RNASeqV2.geneExp.tsv:
表达矩阵，第一列是基因，之后是其在每个样本中的表达量。下载自
http://api.gdc.cancer.gov/data/3586c0da-64d0-4b74-a449-5ff4d9136611
These files use the same input data as FigureYa253panGSEA,
FigureYa263panDiff, and FigureYa265panCNV - if you’ve already downloaded
them, no need to download again.
merged_sample_quality_annotations.tsv: Downloaded from
https://gdc.cancer.gov/about-data/publications/pancanatlas
.
Direct download link:
http://api.gdc.cancer.gov/data/1a7d7be8-675d-4e60-a105-19d4121bdebf
.
EBPlusPlusAdjustPANCAN_IlluminaHiSeq_RNASeqV2.geneExp.tsv: Expression
matrix where the first column contains gene names, followed by
expression values for each sample. Downloaded from
http://api.gdc.cancer.gov/data/3586c0da-64d0-4b74-a449-5ff4d9136611
# 定义感兴趣的M6A基因集(VIRMA和KIAA1429同名，https://www.genecards.org/cgi-bin/carddisp.pl?gene=VIRMA)
# Define the M6A gene set of interest (VIRMA and KIAA1429 are the same gene, see: https://www.genecards.org/cgi-bin/carddisp.pl?gene=VIRMA)
m6a <- c("YTHDC1","IGF2BP1","IGF2BP2","IGF2BP3",
         "YTHDF1","YTHDF3","YTHDC2","HNRNPA2B1",
         "YTHDF2","HNRNPC","RBMX","METTL3",
         "METTL14","WTAP","KIAA1429","RBM15",
         "RBM15B","ZC3H13","FTO","ALKBH5")

# 获得同时有肿瘤和正常样本的肿瘤名
# Get tumor names that have both tumor and normal samples
tumors <- c("BLCA","BRCA","CESC","CHOL","COAD",
            "ESCA","GBM","HNSC","KICH","KIRC",
            "KIRP","LIHC","LUAD","LUSC","PAAD",
            "PRAD","READ","STAD","THCA","UCEC")

# 修正TCGA名称：https://gdc.cancer.gov/about-data/publications/pancanatlas
# Correct TCGA names: https://gdc.cancer.gov/about-data/publications/pancanatlas
rawAnno <- read.delim("merged_sample_quality_annotations.tsv",sep = "\t",row.names = NULL,check.names = F,stringsAsFactors = F,header = T) 
# 简化样本ID（取前15位TCGA条码）
# Simplify sample IDs (first 15 characters of TCGA barcode)
rawAnno$simple_barcode <- substr(rawAnno$aliquot_barcode,1,15)

# 创建精简注释表（去重+关键列）
# Create concise annotation table (deduplicated + key columns)
samAnno <- rawAnno[!duplicated(rawAnno$simple_barcode),c("cancer type", "simple_barcode")]

# 过滤无效记录（癌症类型为空）
# Filter invalid records (empty cancer type)
samAnno <- samAnno[which(samAnno$`cancer type` != ""),]

# 保存简化版注释文件（供后续分析使用）
# Save simplified annotation (for downstream analysis)
write.table(samAnno,"simple_sample_annotation.txt",sep = "\t",row.names = F,col.names = T,quote = F)

# 快速读取表达谱: https://gdc.cancer.gov/about-data/publications/pancanatlas
# Quickly read expression profiles: https://gdc.cancer.gov/about-data/publications/pancanatlas
expr <- fread("EBPlusPlusAdjustPANCAN_IlluminaHiSeq_RNASeqV2.geneExp.tsv",sep = "\t",stringsAsFactors = F,check.names = F,header = T)

# 转换为数据框并设置行名
# Convert to dataframe and set row names
expr <- as.data.frame(expr); rownames(expr) <- expr[,1]; expr <- expr[,-1]

# 调整行名
# Adjust row names
gene <- sapply(strsplit(rownames(expr),"|",fixed = T), "[",1) 

expr$gene <- gene

# 移除重复样本
# Remove duplicate samples
expr <- expr[!duplicated(expr$gene),] 
rownames(expr) <- expr$gene; expr <- expr[,-ncol(expr)]

# 取部分表达谱，全部匹配
# Extract partial expression profiles, all matched
comgene <- intersect(rownames(expr),m6a) 

# 提取m6A基因表达子集
# Extract m6A gene expression subset
expr_sub <- expr[comgene,]

# 简化样本ID（取前15位）
# Simplify sample IDs (first 15 characters)
colnames(expr_sub) <- substr(colnames(expr_sub),1,15)

# 去除重复样本（基于简化后的ID）
# Remove duplicate samples (based on simplified IDs)
expr_sub <- expr_sub[,!duplicated(colnames(expr_sub))]

# 内存清理
# Memory Cleanup
rm(expr); gc()
差异表达分析
Differential Expression Analysis
# 初始化差异表达矩阵以存储每个基因在每个癌种种类里的log2FoldChange值
# Initialize a differential expression matrix to store log2FoldChange values for each gene in each cancer type
degRes <- as.data.frame(matrix(NA,nrow = length(comgene),ncol = length(tumors),
                 dimnames = list(comgene,tumors)))

# 跨癌种差异表达分析
# Pan-Cancer Differential Expression Analys
for (i in tumors) {
  message("--",i,"...")
  
  # 获取当前癌症类型的样本ID
  # Get sample IDs for current cancer type
  sam <- samAnno[which(samAnno$`cancer type` == i),"simple_barcode"]
  
  # 获取表达矩阵和样本注释的交集
  # Get intersection between expression matrix and sample annotation
  comsam <- intersect(colnames(expr_sub), sam)
  
  # 获得肿瘤样本
  # Extract tumor samples  
  tumsam <- comsam[substr(comsam,14,14) == "0"] 
  
  # 获得正常样本
  # Extract normal samples
  norsam <- comsam[substr(comsam,14,14) == "1"] 
  
  # 提取目标基因的表达子集
  # Extract expression subset for target genes
  expr_subset <- expr_sub[,c(tumsam,norsam)]
  
  # 这份数据里存在负值，即便负值比较小，但也要矫正，如果使用其他泛癌表达谱根据情况而定
  # This dataset contains negative values (though small), so correction is needed. Adjust if using other pan-cancer expression data
  expr_subset[expr_subset < 0] <- 0 
  
  # 这份泛癌数据存在空值，所以做缺失值填补
  # Missing value imputation (this pan-cancer dataset contains NAs)
  expr_subset <- as.data.frame(impute.knn(as.matrix(expr_subset))$data) 
  
  # 输出子表达谱
  # Output the subset expression profile 
  write.table(expr_subset, paste0("TCGA_",i,"_expr_subset.txt"),sep = "\t",row.names = T,col.names = NA,quote = F)
  
  # 利用limma脚本做差异表达分析（脚本会识别数据的量级来确定是否进行对数化）
  # Perform differential expression analysis using the limma script (automatically checks data scale to determine if log transformation is needed)
  subt <- data.frame(condition = rep(c("tumor","normal"),c(length(tumsam),length(norsam))),
                     row.names = colnames(expr_subset),
                     stringsAsFactors = F)
  
  # 执行limma差异表达分析
  # Perform limma differential expression analysis
  twoclasslimma(subtype  = subt, 
                featmat  = expr_subset, 
                treatVar = "tumor", 
                ctrlVar  = "normal", 
                prefix   = paste0("TCGA_",i), 
                overwt   = T, 
                sort.p   = F, 
                verbose  = TRUE, 
                res.path = ".") 
  
  # 加载差异表达文件
  # Load the differential expression results 
  res <- read.table(paste0("TCGA_",i,"_limma_test_result.tumor_vs_normal.txt"),sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
  
  # 将log2FC值存入结果矩阵
  # Store log2FC values in result matrix
  degRes[,i] <- res[rownames(degRes),"log2fc"]
}
# 保存差异表达结果矩阵
# Save differential expression matrix
write.table(degRes,file = "log2fc of m6a genes between tumor and normal samples in pancancer.txt",sep = "\t",row.names = T,col.names = NA,quote = F)
上面“差异表达分析”输出的TCGA_*_limma_test_result.tumor_vs_normal.txt文件可无缝对接FigureYa59volcano，绘制美丽火山图。
The output file TCGA_*_limma_test_result.tumor_vs_normal.txt from the
“Differential Expression Analysis” section can be directly used with
FigureYa59volcano to create high-quality volcano plots.
开始画图
Plotting
绘制log2FoldChange的热图
Generate a Heatmap of log2FoldChange Values
# 使用差异表达结果数据
# Using differential expression results
indata <- degRes

# 对log2FC做聚类
# Cluster log2FC values
hcs <- hclust(distanceMatrix(as.matrix(indata), "euclidean"), "ward.D") 

## 创建行注释
## Create row annotations
annRow <- data.frame(row.names = m6a,
                     class = rep(c("Readers","Writers","Erasers"),c(11,7,2)))

# 设置因子水平（控制显示顺序）
# Set factor levels (controls display order)
annRow$class <- factor(annRow$class, levels = c("Readers","Writers","Erasers"))

# 定义注释颜色方案
# Define annotation color scheme
annColors <- list(class = c("Readers" = "#51B743",
                            "Writers" = "#FAC67A",
                            "Erasers" = "#5AC9FA"))

# 设置热图的颜色板
# Set heatmap color gradient
colPattern <- c("#183869","#4195C1","white","#CB5746","#62011D") 

# 热图绘制
# Heatmap Visualization
hm <- pheatmap(as.matrix(indata[rownames(annRow),]),
         border_color = "black", 
         cluster_rows = FALSE,
         cluster_cols = hcs, 
         show_rownames = TRUE,
         show_colnames = TRUE,
         annotation_row = annRow, 
         annotation_colors = annColors, 
         cellwidth = 18, 
         cellheight = 12, 
         color = colorRampPalette(colPattern)(64), 
         name = "log2FoldChange") 

# 保存热图为PDF
# Save heatmap as PDF
pdf(file = "pancancer heatmap of log2fc for m6A between tumor and normal samples.pdf", width = 8, height = 6)

# 绘制热图
# Draw heatmap
draw(hm)

# 静默关闭图形设备
# Silently close graphics device
invisible(dev.off())
批量绘制箱型图(y轴的标签可以最后用AI补上)
Batch Generation of Box Plots (Y-axis labels can be added later
using AI)
以
IGF2BP3
基因为例
Using the IGF2BP3 gene as an example
# 设置感兴趣的基因
# Set gene of interest 
geneInterest <- "IGF2BP3" 

# 定义颜色方案
# Define color scheme
darkred <- "#F2042C"
darkblue <- "#21498D"

# 创建多页PDF输出文件
# Create multi-page PDF output
pdf(file = paste0("pancancer boxplot of ", geneInterest, " expression between tumor and normal samples.pdf"), width = 10,height = 10)

# 设置4行5列的图形布局（适应20种癌症类型）
# Set 4x5 graphical layout (for 20 cancer types)
par(mfrow = c(4,5))

# 跨癌种循环分析
# Pan-Cancer Iterative Analysis
for (i in tumors) {
  message("--",i,"...")
  
  # 获取当前癌症类型的样本ID
  # Get sample IDs for current cancer type
  sam <- samAnno[which(samAnno$`cancer type` == i),"simple_barcode"]
  
  # 获取表达矩阵和样本注释的交集
  # Get intersection between expression matrix and sample annotation
  comsam <- intersect(colnames(expr_sub), sam)
  
  # 获得肿瘤样本
  # Extract tumor samples
  tumsam <- comsam[substr(comsam,14,14) == "0"] 
  
  # 获得正常样本
  # Extract normal samples
  norsam <- comsam[substr(comsam,14,14) == "1"] 
  
  # 读入子表达谱
  # Load subset expression profile
  expr_subset <- read.table(paste0("TCGA_",i,"_expr_subset.txt"),sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
  
  # 取出肿瘤样本特定基因的表达并对数化
  # Extract and log-transform tumor sample expression
  exprTgene <- log2(as.numeric(expr_subset[geneInterest,tumsam]) + 1) 
  
  # 取出正常样本特定基因的表达并对数化
  # Extract and log-transform normal sample expression
  exprNgene <- log2(as.numeric(expr_subset[geneInterest,norsam]) + 1) 
  
  # 为了使得图形尽可能紧凑，因为四边的距离分别设置为0.1（底部空出一小段距离），1.5（左边因为要放y轴刻度），2（顶部因为肿瘤名写在顶部），0.1（右部空出一小段距离）
  # Set plot parameters for compact display: 0.1 (bottom margin), 1.5 (left margin for y-axis), 2 (top margin for cancer type label), 0.1 (right margin) 
  par(bty="o", mgp = c(1.5,.33,0), 
      mar=c(0.1,1.5,2,0.1), 
      las=1, tcl=-.25,las = 1, xpd = F)
  
  # 绘制肿瘤vs正常表达比较箱线图
  # Draw tumor vs normal expression boxplot
  boxplot(exprNgene,exprTgene,
          col = c(darkblue,darkred), 
          outline = FALSE, 
          ylab = "", 
          xaxt='n') 
  
  # 添加癌症类型标签（顶部）
  # Add cancer type label (top)
  mtext(side = 3, text = i,line = 0.5)
}
# 静默关闭图形设备
# Silently close graphics device
invisible(dev.off())
Session Info
sessionInfo()
FigureYa202consensusGene
FigureYa202consensusGene
Author(s)
: Xiaofan Lu
Date
: 2025-09-22
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
主要是Fig.1ABC这个图。尤其是Fig.1A这种两个通路一起聚类并找到关键基因的方法，很另类。
Requirement Description
The main thing is Fig.1ABC this figure. In particular, Fig.1A, a
method of clustering two pathways together and finding key genes, is
very different.
出自
https://clincancerres.aacrjournals.org/content/26/1/135
from
https://clincancerres.aacrjournals.org/content/26/1/135
Figure 1. Stratification of PDAC tumors based on expression of
glycolytic and cholesterogenic genes. A, Heatmap depicting consensus
clustering solution (k 1⁄4 3) for glycolytic and cholesterogenic genes
in resected and metastatic PDAC samples (n 1⁄4 325). B, Scatter plot
showing median expression levels of coexpressed glycolytic (x-axis) and
cholesterogenic (y-axis) genes in each PDAC sample. Metabolic subgroups
were assigned on the basis of the relative expression levels of
glycolytic and cholesterogenic genes. C, Heatmap depicting expression
levels of coexpressed glycolytic and cholesterogenic genes across each
subgroup.
应用场景
基因共识聚类选择共表达的基因集，随后根据表达谱中位数划分四类样本。
FigureYa154immuneSubtypes和FigureYa201ClusterCorrelation也用到了ConsensusClusterPlus做共识聚类，可相互参考，灵活运用，设计出更有趣的展示方式。
Application Scenario
Gene consensus clustering is used to select co-expressed gene sets,
followed by dividing samples into four categories based on the median
expression profile.
Both FigureYa154immuneSubtypes and FigureYa201ClusterCorrelation also
employ ConsensusClusterPlus for consensus clustering. These examples can
serve as mutual references, allowing flexible adaptation to design more
innovative visualization approaches.
环境设置
Environment settings
source("install_dependencies.R")
library(ConsensusClusterPlus)
library(pheatmap)
library(dendsort)

Sys.setenv(LANGUAGE = "en") #显示英文报错信息 # Display English error messages
options(stringsAsFactors = FALSE) #禁止chr转成factor # Prohibit converting chr to factor
自定义函数用于归一化表达谱 Custom functions are used to normalize
expression spectra
standarize.fun <- function(indata=NULL, halfwidth=NULL, centerFlag=T, scaleFlag=T) {  
  outdata=t(scale(t(indata), center=centerFlag, scale=scaleFlag))
  if (!is.null(halfwidth)) {
    outdata[outdata>halfwidth]=halfwidth
    outdata[outdata<(-halfwidth)]= -halfwidth
  }
  return(outdata)
}
输入文件
tcga.expr.simplified.txt，表达矩阵。
REACTOME_GLYCOLYSIS.txt和REACTOME_CHOLESTEROL_BIOSYNTHESIS.txt，参与这两个通路的基因。
Input the file
tcga.expr.simplified.txt, the expression matrix.
REACTOME_GLYCOLYSIS.txt and REACTOME_CHOLESTEROL_BIOSYNTHESIS.txt,
genes involved in these two pathways.
# 加载表达数据 # Load the expression data
expr <- read.table("tcga.expr.simplified.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = 1)
expr <- expr[rowSums(expr) > 1,]
tum.sam <- colnames(expr)[which(substr(colnames(expr),11,13) == "01A")]

# 加载代谢基因集 # Load the metabolic gene set
meta1.gene <- read.table("REACTOME_GLYCOLYSIS.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = NULL)
meta2.gene <- read.table("REACTOME_CHOLESTEROL_BIOSYNTHESIS.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = NULL)

# 设置颜色 # Set the color
purple <- "#3A236B"
lightblue <- "#A7DCF8"
seagreen <- "#7B9C4A"
nake <- "#BDA597"
cherry <- "#7F1D47"
基因维度共识聚类
Consensus clustering at the gene dimension
glycolytic.gene <- meta1.gene$REACTOME_GLYCOLYSIS # 基因数目和原文不符，做不到复现，只能把原理做出来 # The number of genes does not match the original text, and it cannot be reproduced, so the principle can only be made
cholesterogenic.gene <- meta2.gene$REACTOME_CHOLESTEROL_BIOSYNTHESIS

glycolytic.gene <- intersect(glycolytic.gene,rownames(expr))
cholesterogenic.gene <- intersect(cholesterogenic.gene,rownames(expr))

indata <- t(log10(expr[c(glycolytic.gene,cholesterogenic.gene),tum.sam] + 1)) # 数据标准化作聚类 # Data is normalized for clustering
indata <- t(scale(t(indata)))

# 以下聚类参数和原文不一致，仅仅是为了得到稍微稳定一点的聚类结果，但无法复现
# The following clustering parameters are inconsistent with the original text, just to get a slightly more stable clustering result, but cannot be reproduced
cc <- ConsensusClusterPlus(d = indata, 
                           maxK = 3, # 三类 # Three categories
                           reps = 100, # 重抽样次数，可修改 # Number of resamples, which is modifiable
                           pItem = 0.8, # 列维度抽样概率，可修改 # Column dimension sampling probability, which is modifiable
                           pFeature = 1, # 行维度抽样概率，可修改 # Row dimension sampling probability, which is modifiable
                           clusterAlg = "hc", # 聚类算法，可修改 # Clustering algorithm, which is modifiable
                           innerLinkage = "ward.D2", # 内部链接函数，可修改 # Internal link function, which is modifiable
                           finalLinkage = "ward.D2", # 最终链接函数，可修改 # Last-link function, which is modifiable
                           distance = "spearman", # 距离测度，可修改 # Distance measurement, modifiable
                           seed = 2020103,
                           title = "ConsensusCluster",
                           plot = "pdf") #或png #or png
重新绘制热图 - Figure 1A
Redraw Heatmap - Figure 1A
annCol <- data.frame(Cluster = paste0("C",cc[[3]][[3]]),
                     row.names = colnames(indata))
annRow <- data.frame(Pathway = rep(c("Glycolytic","Cholesterogenic"),c(length(glycolytic.gene),length(cholesterogenic.gene))),
                     row.names = colnames(indata))
annColors <- list(Cluster = c("C1" = seagreen,"C2" = cherry, "C3" = nake),
                  Pathway = c("Glycolytic" = "black","Cholesterogenic" = lightblue))

plotdata <- cc[[3]][[1]]
dimnames(plotdata) <- list(colnames(indata),colnames(indata))
pheatmap(mat = plotdata,
         color = colorRampPalette((c("white",purple)))(64),
         border_color = NA,
         cluster_rows = dendsort(cc[[3]][[2]]),
         cluster_cols = dendsort(cc[[3]][[2]]),
         annotation_col = annCol,
         annotation_row = annRow,
         annotation_colors = annColors,
         show_colnames = F,
         show_rownames = F)
dev.copy2pdf(file = "consensus heatmap.pdf",width = 6, height = 5)
绘制四象限散点图 - Figure 1B
Draw a four-quadrant scatter plot - Figure 1B
# 取出最终基因集 (根据热图的聚类结果修改C1 C2 C3)
# Extract the final gene set (modify C1, C2, C3 according to the clustering results of the heat map)
glycolytic.curated <- setdiff(rownames(annCol[which(annCol$Cluster == "C3"),,drop = F]),cholesterogenic.gene) # 这里是C3 # This is C3
cholesterigenic.curated <- setdiff(rownames(annCol[which(annCol$Cluster == "C2"),,drop = F]),glycolytic.gene) # 这里是C2 # This is C2

pathway.list <- list("glycolytic" = glycolytic.curated,
                     "cholesterigenic" = cholesterigenic.curated)

# 计算中位表达值
# Calculate the median expression value
curated.meta.expr <- log10(expr[c(glycolytic.curated,cholesterigenic.curated),tum.sam] + 1)
curated.meta.expr <- as.data.frame(t(scale(t(curated.meta.expr))))
curated.meta.expr$Pathway <- rep(c("glycolytic","cholesterigenic"),c(length(glycolytic.curated),length(cholesterigenic.curated)))
curated.meta.expr.median <- apply(curated.meta.expr[,setdiff(colnames(curated.meta.expr), "Pathway")], 2, function(x) tapply(x, INDEX=factor(curated.meta.expr$Pathway), FUN=median, na.rm=TRUE))
curated.meta.expr.median <- as.data.frame(t(curated.meta.expr.median))

# 四分类样本
# Four-class samples
curated.meta.expr.median$subtype <- 
  ifelse(curated.meta.expr.median$cholesterigenic >= 0 & curated.meta.expr.median$glycolytic >= 0,"Mixed",
         ifelse(curated.meta.expr.median$cholesterigenic <= 0 & curated.meta.expr.median$glycolytic <= 0,"Quiescent",
                ifelse(curated.meta.expr.median$cholesterigenic > 0 & curated.meta.expr.median$glycolytic < 0,"Cholesterogenic","Glycolytic")))

# 绘图
# Drawing
par(bty="o", mgp = c(1.9,.33,0), mar=c(3.1,4.1,2.1,3.1)+.1, las=1, tcl=-.25)
plot(NULL, NULL, # 绘制空白背景 # Draw a blank background
     xlim = range(curated.meta.expr.median$glycolytic),
     ylim = range(curated.meta.expr.median$cholesterigenic),
     xlab = "median glycolytic gene expression (z-score)",
     ylab = "median cholesterigenic\ngene expression (z-score)")
grid(col = "grey85", lty = 2, lwd = 1.5) # 添加网格线 # Add gridlines
abline(v = 0, lty = 2, lwd = 2) # 添加水平0截断 # Add horizontal 0 truncation
abline(h = 0, lty = 2, lwd = 2) # 添加垂直0阶段 # Add vertical 0 truncation

# 添加四个象限的散点
# Add a scatter for four quadrants
points(curated.meta.expr.median[which(curated.meta.expr.median$subtype == "Mixed"),"glycolytic"],
       curated.meta.expr.median[which(curated.meta.expr.median$subtype == "Mixed"),"cholesterigenic"],
       pch = 19,
       col = "#895430")

points(curated.meta.expr.median[which(curated.meta.expr.median$subtype == "Cholesterogenic"),"glycolytic"],
       curated.meta.expr.median[which(curated.meta.expr.median$subtype == "Cholesterogenic"),"cholesterigenic"],
       pch = 19,
       col = "#99B15B")

points(curated.meta.expr.median[which(curated.meta.expr.median$subtype == "Glycolytic"),"glycolytic"],
       curated.meta.expr.median[which(curated.meta.expr.median$subtype == "Glycolytic"),"cholesterigenic"],
       pch = 19,
       col = "#62A2AA")

points(curated.meta.expr.median[which(curated.meta.expr.median$subtype == "Quiescent"),"glycolytic"],
       curated.meta.expr.median[which(curated.meta.expr.median$subtype == "Quiescent"),"cholesterigenic"],
       pch = 19,
       col = "#E6B73C")

# 绘制图例
# Draw a legend
legend("topleft",
       legend = c("Metabolic subgroup","Mixed","Cholesterogenic","Glycolytic","Quiescent"),
       col = c(NA,"#895430","#99B15B","#62A2AA","#E6B73C"),
       pch = 19,
       border = NA,
       bty = "n")
dev.copy2pdf(file = "median classification.pdf",width = 5, height = 5)
绘制基于四分类的表达谱热图 - Figure 1C
Plotting a Heatmap of Expression Spectra Based on Quadruple
Classification - Figure 1C
plotdata <- curated.meta.expr[,setdiff(colnames(curated.meta.expr),"Pathway")] # 提出表达值 # Propose an expression value
# 构建样本注释
# Build sample annotations
annCol <- data.frame("Subgroup" = curated.meta.expr.median$subtype,
                     row.names = rownames(curated.meta.expr.median),
                     stringsAsFactors = F)
annCol$Subgroup <- factor(annCol$Subgroup,levels = c("Quiescent","Glycolytic","Cholesterogenic","Mixed"))
annCol <- annCol[order(annCol$Subgroup),,drop = F]
# 把样本分型信息保存到文件
# Save the sample typing information to a file
write.table(annCol, file = "output_subgroup.txt",sep = "\t", quote = F)

# 构建基因注释
# Construct gene annotations
annRow <- data.frame(Pathway = rep(c("Glycolytic","Cholesterogenic"),c(length(glycolytic.curated),length(cholesterigenic.curated))),
                     row.names = c(glycolytic.curated,cholesterigenic.curated),
                     stringsAsFactors = F)
# 构建注释颜色列表
# Build a list of annotation colors
annColors <- list(Subgroup = c("Mixed" = "#895430", "Cholesterogenic" = "#99B15B", "Glycolytic" = "#62A2AA", "Quiescent" = "#E6B73C"),
                  Pathway = c("Glycolytic" = "black","Cholesterogenic" = lightblue))

# 重归一化表达谱便于更好地展示颜色特性
# Renormalize the expression spectrum for better representation of color characteristics
plotdata <- standarize.fun(plotdata[rownames(annRow),rownames(annCol)],halfwidth = 3)
pheatmap(plotdata,
         border_color = NA,
         cluster_cols = F,
         cluster_rows = F,
         show_colnames = F,
         show_rownames = T,
         annotation_row = annRow,
         annotation_col = annCol,
         annotation_colors = annColors,
         gaps_row = 27, # 热图基因截断位置 # Heatmap gene cut-off locations
         gaps_col =  cumsum(table(annCol$Subgroup))[1:3], # 热图亚型截断位置 # Heatmap subtype cut-off location
         color = colorRampPalette((c("#18469B","white","#8C183D")))(64)) # 例文颜色 # Example color
dev.copy2pdf(file = "median classification heatmap.pdf",width = 10, height = 6)
Session Info
sessionInfo()
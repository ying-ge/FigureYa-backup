FigureYa59Plus_GEO2DEG
FigureYa59Plus_GEO2DEG
Author(s)
: Haitao Wang; Ying Ge, Yijing Chen
Date
: 2025-09-22
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Requirement description
从GEO数据库下载芯片数据，筛选差异表达基因，无缝对接FigureYa59volcano画火山图。
Download chip data from the GEO database, screen for differentially
expressed genes, and seamlessly connect with FigureYa59volcano to plot a
volcano map.
应用场景
Application scenario
适用于GEO数据库里的芯片数据。
Applicable to chip data in the GEO database.
环境设置
Environment setting
source("install_dependencies.R")
library(GEOquery)
library(limma)
library(ggplot2)
library(ggrepel)
library(ggthemes)

Sys.setenv(LANGUAGE = "en") #显示英文报错信息 display English error messages
options(stringsAsFactors = FALSE) #禁止chr转成factor prohibit the conversion of chr to factor
输入数据的获得
Obtain input data
如果你的数据已经整理成“easy_input_expr.csv”和“easy_input_pheno.csv”的格式，包含所有基因的表达矩阵，每行一个基因，每列一个sample，就可以跳过这步，直接进入“输入数据预处理”；
如果已经整理成“easy_input_limma.csv”的格式，包含所有基因的差异表达分析结果，每行一个基因，第一列是基因名，后面包含log2foldchange、P.value或adj.Pvalue，就直接跳到“开始画图”。
If your data have been organized into “easy_input_expr.csv” and
“easy_input_pheno.csv” formats, which contain the expression matrices of
all the genes, one gene in each row and one sample in each column, you
can skip this step and go directly to “Input data preprocessing”;
If it has been organized into the format of “easy_input_limma.csv”,
which contains the differential expression analysis results of all the
genes, one gene per row, the first column is the gene name, followed by
log2foldchange, P.value or adj.Pvalue, then directly jump to “Start
drawing”.
从GEO下载表达矩阵和芯片注释文件
Download expression matrix and chip annotation file from GEO
此处以GSE17215
https://www.ncbi.nlm.nih.gov/gds/?term=GSE17215
为例，用芯片平台自带的探针组和gene
symbol对应关系：Affymetrix HT Human Genome U133A Array: GPL3921
https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GPL3921
。如果芯片平台自带的注释信息不符合你的要求，需要重注释，请使用FigureYa58lncRNAreannotation，获得探针ID跟gene
symbol的对应关系。
首先，让我们打开一个R会话，创建一个函数来返回eset
https://www.amazon.com/ESET-SMART-Security-3U-2016/dp/B01723PG10
(ExpressionSet)对象或R中getGEO()函数下载的原始列表对象
把下載的步驟寫成一個小的function
getGEOdata
，每次load
function之後就可以簡單通過修改GSE ID拿到自己想要的data進行分析了
Here is an example of GSE17215
https://www.ncbi.nlm.nih.gov/gds/?term=GSE17215
, use the
probe set and gene symbol correspondence that comes with the chip
platform: Affymetrix HT Human Genome U133A Array: GPL3921
https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GPL3921
.
If the annotation information of the chip platform does not meet your
requirements and you need to re-annotate, please use
FigureYa58lncRNAreannotation to get the correspondence between the probe
ID and the gene symbol.
First, let’s start by opening an R session and creating a function to
return the eset
https://www.amazon.com/ESET-SMART-Security-3U-2016/dp/B01723PG10
(ExpressionSet)
object or the original list object downloaded by the getGEO() function
in R
Write the download steps as a small function
getGEOdata
.
After each load function, you can easily get the data you want by
modifying the GSE ID for analysis.
getGEOdata <- function(x, GSE.id=FALSE){
  # 使用getGEO()函数下载存储在x中的id的GEO数据
  # Use the getGEO() function to download the GEO data for the id stored in x
  GSEdata <- getGEO(x, GSEMatrix=T, AnnotGPL=FALSE)
  # 检查数据：打印前两列表达值的摘要
  # check the data: printing a summary of the expression values for the first 2 columns
  print(summary(exprs(GSEdata[[1]])[,1:2]))
  # 获得eset对象
  # Get the eset object
  eset <- GSEdata[[1]]
  # 将生成的对象保存在当前工作目录中，以备将来使用
  # Save the objects generated for future use in the current working directory
  save(GSEdata, eset, file=paste(x, ".RData", sep=""))
  #检查我们是否要返回我们在GEO上下载的列表对象
  #还是只想返回带有getGSEobject参数的eset对象
  # check whether we want to return the list object we downloaded on GEO or
  # just the eset object with the getGSEobject argument
  if(GSE.id) return(GSEdata) else return(eset)
}

# 将数据集ID存储在一个向量GEO_dataset中，以防你想要循环遍历多个GEO ID
# Store the dataset ids in a vector GEO_dataset just in case you want to loop through several GEO ids
GEO_dataset <- c("GSE17215") #芯片数据在GEO数据库里的ID chip data ID in the GEO database

# 获得表达矩阵
# obtain the expression matrix
eset <- getGEOdata(GEO_dataset[1])
exprSet <- as.data.frame(exprs(eset))
# 提取GSM ID作为样品名
# extract GSM ID as sample name
GSMID <- pData(eset)[,c(1,2,8,10,12)]
colnames(exprSet) <- GSMID$geo_accession

# 获得探針组跟gene symbol的对应关系
# obtain the correspondence between probe set and gene symbol
gpl <- getGEO(eset$platform_id[1])
dim(Table(gpl)) #查看一共有多少行探针组 view how many rows of probe sets there are
# 到此為止，所需要的表达矩阵和芯片平台注释已經下載成功
# up to this point, the required expression matrix and chip platform annotations have been downloaded.
整理芯片平台注释信息
Organize chip platform annotation information
此处使用芯片平台自带的探针组和gene symbol对应关系。
如果芯片平台自带的注释信息不符合你的要求，需要重注释，使用FigureYa58lncRNAreannotation，获得探针ID跟gene
symbol的对应关系“gplTOgene.csv”文件，就跳过这步，直接进入“Transfer ID to
Gene Symbol”。
The probe set and gene symbol correspondence provided by the chip
platform is used here.
If the annotation information of the chip platform does not meet your
requirements and you need to re-annotate, use
FigureYa58lncRNAreannotation to get the correspondence between probe ID
and gene symbol in the “gplTOgene.csv” file, then skip this step and go
directly to “Transfer ID to Gene Symbol”.
colnames(Table(gpl)) #查看列名 view column name
#head(Table(gpl))

# 提取自己想要的信息，此处第1、11、12列，分别是行名ID和其对应的Gene Symbol和ENTREZ_GENE_ID
# extract the information you want, here columns 1, 11 and 12, are the row ID and its corresponding Gene Symbol and ENTREZ_GENE_ID respectively
annotation <- Table(gpl)[,c(1,11,12)]
i <- sapply(annotation, is.factor) # Change factor to character
annotation[i] <- lapply(annotation[i], as.character)

# 有些探针组对应多個基因，使用“///”分割，當然你可以選擇保留，我的習慣是保留第一個，所以這裡對於其他的冗余信息進行clean
# some probe sets correspond to multiple genes, use “///” to split, of course you can choose to keep, my habit is to keep the first one, so the other redundant information is cleaned here
annotation[,2] <- data.frame(sapply(annotation[,2], function(x) unlist(strsplit(x,'///'))[1]),stringsAsFactors = F)[,1]
annotation[,3] <- data.frame(sapply(annotation[,3], function(x) unlist(strsplit(x,'///'))[1]),stringsAsFactors = F)[,1]
# 或者宁缺毋滥，删除对应多个基因的探针组，用下面两行代替上面两行
# or it is better to have nothing than something suboptimal, delete the probe sets corresponding to multiple genes, and replace the above two lines with the following two lines
#annotation <- annotation[!grepl("///", annotation$`Gene Symbol`),]
#dim(annotation)

# 把整理好的探针组ID、gene symbol、ENTREZ ID对应关系保存到文件里
# save the organized probe set ID, gene symbol, ENTREZ ID correspondence to a file
colnames(annotation) <- c("probe_id", "gsym", "entrez_id")
write.csv(annotation, "gplTOgene.csv", row.names = F)
把表达矩阵的探针组ID换成Gene Symbol
Replace the probe set ID of the expression matrix with Gene
Symbol
需要用到前面整理好的芯片自带的注释，或重注释获得的“gplTOgene.csv”文件。
You need to use the annotations that come with the previously
organized chip, or re-annotate the obtained “gplTOgene.csv” file.
annotation <- read.csv("gplTOgene.csv")
head(annotation)
exprSet$probe_id <- rownames(exprSet)
express <- merge(x = exprSet, y = annotation[,c(1:2)], by = "probe_id", all.x = T) 
#如果想轉換成ENTREZ_GENE_ID，就用下面这行
#if you want to convert to ENTREZ_GENE_ID, use the following line
#express <- merge(x = exprSet, y = annotation[,c(1:3)], by = "probe_id", all.x = T) 
express$probe_id <- NULL

# 有些gene对应多个探针组，此处保留其中表达量最大值
# some genes correspond to multiple probe sets, the highest expression values are retained here
dim(express)
rowMeans <- apply(express, 1, function(x) mean(as.numeric(x), na.rm = T))
express <- express[order(rowMeans, decreasing =T),]
express <- express[!duplicated(express[, dim(express)[2]]),]  #express的最后一列为gene name the last column of express is the gene name.
express <- na.omit(express)
dim(express)
rownames(express) <- express[,dim(express)[2]]
express <- express[,-(dim(express)[2])]
head(express)
# 至此，表达矩阵（express）已构建好，保存到文件
# at this point, the expression matrix (express) has been constructed and saved to the file
write.csv(express, "easy_input_expr.csv", quote = F)
按照实验设计整理分组信息
Organize group information according to experimental design
# 获得样品信息
# obtain sample information
pdata <- pData(eset)
i <- sapply(pdata, is.factor)
pdata[i] <- lapply(pdata[i], as.character)

# 按照实验设计，构建分组矩阵
# construct the grouping matrix according to the experimental design.
group_list <- subset(pdata, select = title) # Sample的分组信息 Sample's grouping information
group_list$condition = rep(c("a","b"), each = 3)
group_list
# 至此，分组矩阵（design）已构建好
# at this point, the grouping matrix (design) has been constructed
write.table(group_list, "easy_input_pheno.txt", quote = F, sep = "\t", row.names = F)
输入数据预处理
Input data preprocessing
输入数据：
easy_input_expr.csv，基因表达矩阵，每行一个基因，以gene
symbol命名，每列一个sample
easy_input_pheno.txt，样品分组，第一列是sample ID，第二列是分组
Input data
easy_input_expr.csv, gene expression matrix, one gene per row, named
by gene symbol, one sample per column
easy_input_pheno.txt, sample grouping, first column is sample ID,
second column is grouping
均一化处理
Normalization
如果你的数据已经进行过均一化处理，就直接运行下面这段的最后一行
If your data has already been normalized, directly run the last line
of the following paragraph.
express <- read.csv("easy_input_expr.csv", row.names = 1)

# 必须检查该矩阵是否基于 log2
# 通常，log2 值应在 0 - 18 之间
# Have to check whether this matrix is log2 based
# usually, log2 value should be in between 0 - 18
range(express)
# 如果是，则无需进行log transfer，如果高于此范围，则必须进行log transfer。
# if yes no need to log transfer, if above this range, have to do log transfer.
express <- log2(express)

par(mfrow=c(2,1))
boxplot(express,outline = F) #均一化前 pre-normalization

# 使用limma包进行分位数标准化
# Normalise data quantiles using limma
express.norm <- normalizeQuantiles(as.matrix(express))

colnames(express.norm) <- colnames(express)
rownames(express.norm) <- rownames(express)
boxplot(express.norm, outline=F) #均一化后 after normalization
#不需要再做均一化处理，就只运行这一行：
#without further homogenization, just run this line:
#express.norm <- express
离群sample的处理
Process outlier samples
如果不需要处理离群sample，就只运行下面这段的第一行。
If you don’t need to process outlier samples, just run the first line
of the following paragraph.
group_list <- read.table("easy_input_pheno.txt", sep = "\t", header = T)
group_list
# 样本之间的相关性
# Correlation between the samples
heatmap(cor(express.norm), scale = "none")
round(cor(express.norm), 2)
# 通過correlation，可能会發現某个sample与同一組其他sample之间距離很遠，需要删除。
# 此处删除GSM431123
# by correlation, you may find that a sample is far away from other samples in the same group and needs to be deleted.
# delete GSM431123 here
group_list <- group_list[c(-3),] #删除第3个sample delete the third sample
express.norm <- express.norm[,c(-3)] #删除第3列 delete the third column

# 样本之间再次相关
# Correlation between the samples again
heatmap(cor(express.norm),scale="none")
round(cor(express.norm),2)
差异表达分析
Differential expression analysis
用于差异表达基因分析（DEG）的 Limma (
limma
powers differential expression analyses
)**
Limma for differential expression gene analysis (DEG) (
limma
powers differential expression analyses
)**
design <- model.matrix(~ 0 + factor(group_list$condition))
colnames(design) <- levels(factor(group_list$condition))
rownames(design) <- colnames(express.norm)
design
# 构建差异比较矩阵
# construct differential comparison matrix
contrast.matrix <- makeContrasts(b-a, levels = design)
# 至此，差异表达矩阵已构建好
# at this point, the differential expression matrix has been constructed

fit <- lmFit(express.norm,design)
fit2 <- contrasts.fit(fit,contrast.matrix)
fit2 <- eBayes(fit2)
# 得到两两差异表达的结果
# get two-by-two differential expression results
# b vs. a
x <- topTable(fit2, coef = 1, n = Inf, adjust.method = "BH", sort.by = "P")

#把全部基因的limma分析结果保存到文件
#save limma analysis results for all genes to file
write.csv(x, "easy_input_limma.csv", quote = F)
开始画图
Start drawing
用上面获得的
easy_input_limma.csv
作为输入文件，继续运行FigureYa59volcano里的代码，即可画最美火山图。
Use the
easy_input_limma.csv
obtained above as the input
file and continue to run the code in FigureYa59volcano to draw the most
beautiful volcano map.
Session Info
sessionInfo()
FigureYa155ATAC
FigureYa155ATAC
Author(s)
: Long Zhao
Reviewer(s)
: Ying Ge, Junyi Shen
Date
: 2025-09-22
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Requirement Description
复现染色质开放程度差异的热图。 Reproduce a heatmap showing
differences in chromatin accessibility.
出自
https://www.nature.com/articles/nm.4479
From
https://www.nature.com/articles/nm.4479
Figure 4 MeXis alters chromosome architecture at the Abca1 locus.
Heat maps of the accessibility regions in WT and MeXis−/−
macrophages with or without GW3965 treatment.
Top, genome-wide accessibility sites significantly induced by GW3965
in both WT and MeXis−/− macrophages.
Bottom, accessibility sites significantly induced by GW3965 only in
WT macrophages. Significance was determined on the basis of a P value
threshold of 0.05 using DESeq2 in the bioconductor statistical
package.
图的解读
Figure Interpretation
原文中图片d主要表示在有GW3965处理下，abca1基因上WT的染色质开放程度要高于KO。而作为对照，Tlr4
基因没有明显变化。另一方面，图e表示，在没有处理的条件下，野生型和突变体一系列基因没有染色质开放程度差异，但是在有处理的条件下，突变体的染色质开放程度要低于野生型。其中highlight了Abca1的几个peak的变化。
Figure d in the original article primarily indicates that under GW3965
treatment, chromatin accessibility at the abca1 locus is higher in WT
than in KO. In contrast, the Tlr4 gene showed no significant changes. On
the other hand, Figure e shows that, without treatment, there is no
difference in chromatin accessibility between the wild-type and mutant
genes for a range of genes. However, under treatment, chromatin
accessibility in the mutant is lower than that in the wild-type. Changes
in several Abca1 peaks are highlighted.
应用场景
Application Scenarios
用热图展示染色质开放程度差异，同样适用于ChIP-seq数据。 Using heatmaps
to display differences in chromatin accessibility is also applicable to
ChIP-seq data.
环境设置
Environment Setup
安装要用到的软件： Install required software:
pfastq-dump，
https://github.com/inutano/pfastq-dump
fastqc，
https://www.bioinformatics.babraham.ac.uk/projects/fastqc/
bowtie2，
https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.3.5.1/
samtools，
http://samtools.sourceforge.net/
sambamba，
http://lomereiter.github.io/sambamba/
macs2，
https://github.com/taoliu/MACS/wiki/Install-macs2
deeptools，
https://deeptools.readthedocs.io/en/develop/content/installation.html
安装R包 Install R packages
source("install_dependencies.R")
BiocManager::install("DESeq2")
BiocManager::install("ChIPseeker")
Load package
library(dplyr)
library(DESeq2)
library(ChIPseeker)
library(GenomicFeatures)
library(stringr)
library(ComplexHeatmap)
library(circlize)
library(RColorBrewer)
Sys.setenv(LANGUAGE = "en") #显示英文报错信息 #Display English error message
options(stringsAsFactors = FALSE) #禁止chr转成factor # Disable conversion of chr to factor
输入文件的准备 # Prepare the input file
如果你已经获得
rawCount.txt
文件，就可以跳过这步，直接进入“开始画图”。
If you already have the
rawCount.txt
file, you can skip
this step and proceed directly to “Start Drawing.”
sra和bam文件已上传到百度云，链接：
https://pan.baidu.com/s/1_iUX6rb1aZYRU42jeqtE4w，提取码：j2k1
The sra and bam files have been uploaded to Baidu Cloud. Link:
https://pan.baidu.com/s/1_iUX6rb1aZYRU42jeqtE4w
,
extraction code: j2k1
下载参考基因组
Download the reference genome
从
ensembl
下载基因组DNA序列fa和注释gtf文件
Download the genomic DNA sequence fa and annotation gtf files from
ensembl
下载sra数据
Download sra data
SETP 1 在原文找到ID：Data availability. The source data used in the
manuscript can be accessed using the following accession numbers:
GSE98910 (RNA-seq), GSE97207 (ATAC-seq), GSE104027 (ChIP–seq), and
GSE107977 (microarray).
SETP 2 在GEO数据库中搜索GSE97207，进入页面
https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE97207
SETP 3 点击SRP102711，进入
https://www.ncbi.nlm.nih.gov//sra/?term=SRP102711
，点击右上角Send
to——File_——Summary，会下载到
sra_result.csv
文件，里面有样本信息。
SETP 4 继续点击右上角Send
to——File_——Runinfo，会下载到
SraRunInfo.csv
文件，里面有下载链接
download_path
.
SETP 1 Find the ID in the original article: Data availability. The
source data used in this manuscript can be accessed using the following
accession numbers: GSE98910 (RNA-seq), GSE97207 (ATAC-seq), GSE104027
(ChIP-seq), and GSE107977 (microarray).
SETP 2 Search for GSE97207 in the GEO database and go to the page
https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE97207
.
SETP 3: Click SRP102711 and go to
https://www.ncbi.nlm.nih.gov//sra/?term=SRP102711
. Click
Send to > File > Summary in the upper right corner. This will
download the
sra_result.csv
file, which contains sample
information. - SETP 4 Continue clicking “Send to” in the upper right
corner, then “File” and “Runinfo.” This will download the
SraRunInfo.csv
file, which contains the download link
download_path
.
SETP 5 提取下载链接并下载SRR文件 SETP 5 Extract the download link and
download the SRR file.
#awk '{FS = ","; print $10}' SraRunInfo.csv > SRRurl.txt
#这里用wget，你可以尝试迅雷等工具
#Using wget here, you can try tools like Xunlei.
#wget -c -i SRRurl.txt
mkdir 0sra
mv SRR* 0sra
SETP 6 把sra数据转换成fastq数据 SETP 6 Convert SRA data to Fastq
data
# pfastq-dump，并行更快，代替fastq-dump
# pfastq-dump, parallel and faster, replaces fastq-dump
for i in 0sra/*; do echo "pfastq-dump -t 10 --gzip -O ./ $i"; done > command.pfastq.sh
sh command.pfastq.sh
STEP 7
根据
sra_result.csv
和
SraRunInfo.csv
，手动整理成
samples.conf
文件。分为两列，第一列是SRRxxxx，第二列是对应的需要改成的样本名。
STEP 7: Manually organize
sra_result.csv
and
SraRunInfo.csv
into the
samples.conf
file. The
file is divided into two columns: the first column is SRRxxxx, and the
second column is the corresponding sample name to be modified.
质控、alignment，bam文件转成bigwig文件用于下游分析
Quality control, alignment, and converting bam files to BigWig files
for downstream analysis
washu brower 展示bigwig文件
Washu browser displays bigwig files
用
washu
epigenome
browser
查看bigwig文件。这里截图出来，确实能够重复出原文的趋势。 Use
washu epigenome
browser
to view bigwig files. The screenshots shown here do indeed
reproduce the trends in the original article.
washu也是大多数文章中的可视化方法，可以输出svg或者pdf格式。对三维基因组的可视化也做得很好，强烈推荐。
washu is also the visualization method used in most articles and can
output SVG or PDF formats. It also does a good job of visualizing 3D
genomes and is highly recommended.
Call peak
for i in *.bam; do x=${i/.bam/}; echo "macs2 callpeak --nomodel -t $i -q 0.01 -f BAM -g mm --keep-dup all --llocal 10000 -n $x 2> $x.macs2.log"; done > command.macs2.sh
sh command.macs2.sh
Intersect and merge peak file
有多次生物学重复，下面是不同生物学重复之间peak overlap的处理方法：
There are multiple biological replicates. Here’s how to handle peak
overlap between replicates:
基本原理就是4个生物学重复中任意两个有overlap我们就认为这个peak是可信的。
The basic principle is that if any two of the four replicates overlap,
we consider the peak to be reliable.
overlap的标准就是overlap的部分占两个生物学重复的50%以上。 The overlap
criterion is that the overlap accounts for at least 50% of the two
replicates.
echo -e "1\t2
1\t3
1\t4
2\t3
2\t4
3\t4" > paire.txt

for i in KO_DM KO_GW WT_DM WT_GW; do cat paire.txt | while read line; do all=($line); first=${all[0]}; second=${all[1]}; echo "bedtools intersect -wa -a $i\_$first\_peaks.narrowPeak -b KO_DM\_$second\_peaks.narrowPeak -f 0.5 -F 0.5 > $i.$first.$second.tmp.bed
bedtools intersect -wa -a KO_DM\_$second\_peaks.narrowPeak -b $i\_$first\_peaks.narrowPeak -f 0.5 -F 0.5 > $i.$second.$first.tmp.bed
cat $i.$first.$second.tmp.bed $i.$second.$first.tmp.bed | bedtools sort | bedtools merge -d -150 > $i.$first.$second.tmp_merge.bed"; done; done > command.sh

sed -i 's/\\_/_/g' command.sh
sh command.sh

for i in KO_DM KO_GW WT_DM WT_GW; do cat $i*.tmp_merge.bed | bedtools sort | bedtools merge -d -150 | awk '!x[$0]++' > $i.bed; done

rm -rf *.tmp.bed *.tmp_merge.bed

# 把所有的peak文件merge到一起，主要用于后面每个peak中read count数量的计算
# Merge all peak files together, primarily for subsequent calculation of read counts within each peak.
cat *.bed |bedtools sort | bedtools merge -i - > allMerge.bed
peak注释
Peak Annotation
peak注释到基因层面，主要用Guangchuang Yu的ChIPseeker。 Peaks are
annotated at the gene level, primarily using Guangchuang Yu’s
ChIPseeker.
这里用gtf文件做了一个txdb注释文件，同样适用于bioconductor中没有txdb的物种。
Here, a txdb annotation file is created using a gtf file. This also
works for species without a txdb file in Bioconductor.
除了生成txdb注释文件，还会输出一个bed文件，用于后面的进行reads的定量。
In addition to generating the txdb annotation file, a bed file is also
output for subsequent read quantification.
# 生成txdb注释文件
# Generate txdb comment file
TxDb.MM9 <- makeTxDbFromGFF("mm9.gtf", format="gtf", organism="Mus musculus")

peak <- readPeakFile("allMerge.bed",head=F)
peakAnn <- annotatePeak(peak, TxDb=TxDb.MM9, level="gene")
peakAnn <- as.data.frame(peakAnn)
write.table(peakAnn,"peakAnn.txt",sep="\t",quote=F,row.names=F)

peakSaf <- peakAnn[,c(12,1,2,3)]
peakSaf$Strand <- "."
colnames(peakSaf) <- c("GeneID","Chr","Start","End","Strand")
peakSaf$GeneID <- paste(peakSaf$GeneID,1:nrow(peakSaf),sep="_")
write.table(peakSaf,"peak.saf",sep="\t",quote=F,row.names=F)
FeatureCount定量reads
FeatureCount read quantification
featureCounts -a peak.saf -F SAF -T 20 -o rawCount.txt *.bam
开始画图
Start plotting
rawCount.txt，前面生成的。每行一个基因，前6列是基因位置信息，后面每列是一个样本的read
count。可以类比成RNA-seq的read count进行差异分析。 rawCount.txt,
generated earlier. Each line contains one gene. The first six columns
contain gene location information, and the following columns each
contain the read count for a sample. This can be compared to RNA-seq
read count analysis for differential analysis.
先筛选显著差异基因，然后画图。 First, screen for significantly
differentially expressed genes, then plot the graph.
data <- read.table("rawCount.txt",head=T)
rownames(data) <- data[,1]
data <- data[,-c(1:6)]
colnames(data) <- substring(colnames(data),1,7)

# 用DESeq2计算差异
# Calculate the difference using DESeq2
sample <- data.frame(conditions=substring(colnames(data),1,5))
ddsFullCountTable <- DESeqDataSetFromMatrix(countData = data,colData = sample,  design= ~ conditions)
dds <- DESeq(ddsFullCountTable)
rawcount <- as.data.frame(counts(dds, normalized=TRUE))

# WT_GW > WT_DM，并且KO_GW > KO_DM作为上面的heatmap
# WT_GW > WT_DM, and KO_GW > KO_DM as the heatmap above
# WT_GW > WT_DM，但是KO_GW <= KO_DM作为下面的heatmap
# WT_GW > WT_DM, but KO_GW <= KO_DM as the heatmap below
contrast_WT_GW_WT_DM <- c("conditions","WT_GW","WT_DM")
res_WT_GW_WT_DM <- results(dds,contrast=contrast_WT_GW_WT_DM)
up1 <- rownames(subset(as.data.frame(res_WT_GW_WT_DM), as.data.frame(res_WT_GW_WT_DM)$log2FoldChange > 0 & as.data.frame(res_WT_GW_WT_DM)$padj <= 0.05))

contrast_KO_GW_KO_DM <- c("conditions", "KO_GW", "KO_DM")
res_KO_GW_KO_DM <- results(dds,contrast=contrast_KO_GW_KO_DM)
up2 <- rownames(subset(as.data.frame(res_KO_GW_KO_DM), as.data.frame(res_KO_GW_KO_DM)$log2FoldChange > 0 & as.data.frame(res_KO_GW_KO_DM)$padj <= 0.05))

top <- intersect(up1,up2)
bottom <- setdiff(up1,up2) 
top_df <- rawcount[top,]
bottom_df <- rawcount[bottom,]

#处理成平均数
#Process into average
top_df_matrix <- matrix(c(rowMeans(top_df[,9:12]),rowMeans(top_df[,1:4]),rowMeans(top_df[,13:16]),rowMeans(top_df[,5:8])),ncol=4)
colnames(top_df_matrix) <- c("WT_DM","KO_DM","WT_GW","KO_GW")
rownames(top_df_matrix) <- rownames(top_df)

bottom_df_matrix <- matrix(c(rowMeans(bottom_df[,9:12]),rowMeans(bottom_df[,1:4]),rowMeans(bottom_df[,13:16]),rowMeans(bottom_df[,5:8])),ncol=4)
colnames(bottom_df_matrix) <- c("WT_DM","KO_DM","WT_GW","KO_GW") 
rownames(bottom_df_matrix) <- rownames(bottom_df)

#计算percentage
#Calculate percentage
top_perce <- top_df_matrix
for (i in 1:4){ 
    top_perce[,i] <- top_df_matrix[,i]/top_df_matrix[,3]*100 
    } 
bottom_perce <- bottom_df_matrix
for (i in 1:4){ 
        bottom_perce[,i] <- bottom_df_matrix[,i]/bottom_df_matrix[,3]*100 
} 

# 排序
# Sort
ord_top <- order(top_perce[,3],top_perce[,4],decreasing=T)
ht1 <- top_perce[ord_top,]
ord_bottom <- order(bottom_perce[,3],bottom_perce[,4],decreasing=T)
ht2 <- bottom_perce[ord_bottom,]

# 注释mark的位点
# Comment the mark position
locations <- which(str_match(rownames(ht2),"ENSMUST00000030010*")!="NA")
labels <- c("Abca 1 (site 1)","Abca 1 (site 2)","Abca 1 (site 3)")

# 颜色设置
# Color settings
# 这里作者玩了个小trick：小于50%的都是白色
# The author used a little trick here: all sites with less than 50% are white.
col <- c(rep("white",5), brewer.pal(6,"YlOrRd")) 
seq <- seq(0,100,10)

ha <- rowAnnotation(foo = anno_mark(at = locations, labels = labels))
a <- Heatmap(ht1,col = colorRamp2(seq,col),
    show_row_names=F,cluster_columns = FALSE,
    cluster_rows=F, show_column_names = F,
    name="Percentage")

b <- Heatmap(ht2,col = colorRamp2(seq,col),
    show_row_names=F,cluster_columns = FALSE,
    cluster_rows=F,show_column_names = T,
    right_annotation = ha, show_heatmap_legend =F)

pdf(file="heatmap.pdf",width=3,height=6)
a%v%b
dev.off()
heatmap
这里剩下位点有点少，原文在作比较的时候用的pvalue<=0.05,而不是用的矫正后的p值。如果按照原文的话，会得到多的基因。但是，还是没有原文说的6个位点Abca1。
There are a few remaining loci here. The original paper used
pvalue<=0.05 for comparisons, rather than corrected p-values.
Following the original paper would yield more genes. However, the six
Abca1 loci mentioned in the original paper are still missing.
一种猜测就是原文做了4次生物学重复，而作者可能在其中选择某几个重复去做，而不是全部，然后通过不断的尝试，选在最能证明观点的数据进行可视化。
One hypothesis is that the original paper used four biological
replicates, and the authors may have selected a few of these replicates,
rather than all, and then, through repeated trial and error, selected
the data that best supported their findings for visualization.
Session Info
sessionInfo()
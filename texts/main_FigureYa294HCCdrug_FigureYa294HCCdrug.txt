FigureYa294HCCdrug
FigureYa294HCCdrug
Author(s)
: Xiaofan Lu; Yasi Zhang
Reviewer(s)
: Ying Ge
Date
: 2025-05-20
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Demand description
希望复现这篇文章的Figure 4DE。
We hope to reproduce Figure 4DE of this article.
出自：
https://academic.oup.com/bib/article-abstract/22/3/bbaa164/5891146?redirectedFrom=fulltext&login=false
图4. PPS相关生物学过程及药物靶点的鉴定。 (D)
火山图（左）和散点图（右）展示了PPS评分与药物靶点蛋白表达的Spearman相关性及显著性（另见在线表格S11，链接：
https://academic.oup.com/bib
）。红点表示显著正相关（P
< 0.05且Spearman’s r > 0.3）。 (E)
火山图（左）和散点图（右）展示了PPS评分与药物靶点CERES评分的Spearman相关性及显著性（另见在线表格S11，链接：
https://academic.oup.com/bib
）。蓝点表示显著负相关（P
< 0.05且Spearman’s r <
−0.5）。散点图中标注了TP53突变型肝癌细胞系。
复现方法：Yang C, Huang X, Li Y, Chen J, Lv Y, Dai S. Prognosis and
personalized treatment prediction in TP53-mutant hepatocellular
carcinoma: an in silico strategy towards precision oncology. Brief
Bioinform. 2021 May 20;22(3):bbaa164. doi: 10.1093/bib/bbaa164.
开源数据：Gao Q, Zhu H, Dong L, Shi W, Chen R, Song Z, Huang C, Li J,
Dong X, Zhou Y, Liu Q, Ma L, Wang X, Zhou J, Liu Y, Boja E, Robles AI,
Ma W, Wang P, Li Y, Ding L, Wen B, Zhang B, Rodriguez H, Gao D, Zhou H,
Fan J. Integrated Proteogenomic Characterization of HBV-Related
Hepatocellular Carcinoma. Cell. 2019 Nov 14;179(5):1240. doi:
10.1016/j.cell.2019.10.038. Erratum for: Cell. 2019 Oct
3;179(2):561-577.e22.
Source:
https://academic.oup.com/bib/article-abstract/22/3/bbaa164/5891146?redirectedFrom=fulltext&login=false
Figure 4. Identification of PPS-related biological processes and drug
targets. (D) Volcano plot (left) and scatter plots (right) of Spearman’s
correlations and significance between PPS scores and protein expression
of drug targets (see also Table S11 available online at
https://academic.oup.com/bib
). Red dots indicate the
significant positive correlations (P < 0.05, and Spearman’s r >
0.3). (E) Volcano plot (left) and scatter plots (right) of Spearman’s
correlations and significance between PPS score and CERES score of drug
targets (see also Table S11 available online at
https://academic.oup.com/bib
). Blue dots indicate the
significant negative correlations (P < 0.05, and Spearman’s r <
−0.5). TP53-mutant hepatoma cell lines are labeled on the scatter
plots.
Reproduction method: Yang C, Huang X, Li Y, Chen J, Lv Y, Dai S.
Prognosis and personalized treatment prediction in TP53-mutant
hepatocellular carcinoma: an in silico strategy towards precision
oncology. Brief Bioinform. 2021 May 20;22(3):bbaa164. doi:
10.1093/bib/bbaa164.
Open source data: Gao Q, Zhu H, Dong L, Shi W, Chen R, Song Z, Huang
C, Li J, Dong X, Zhou Y, Liu Q, Ma L, Wang X, Zhou J, Liu Y, Boja E,
Robles AI, Ma W, Wang P, Li Y, Ding L, Wen B, Zhang B, Rodriguez H, Gao
D, Zhou H, Fan J. Integrated Proteogenomic Characterization of
HBV-Related Hepatocellular Carcinoma. Cell. 2019 Nov 14;179(5):1240.
doi: 10.1016/j.cell.2019.10.038. Erratum for: Cell. 2019 Oct
3;179(2):561-577.e22.
应用场景
Application scenarios
Identification of potential drug targets for high PPS score HCCs
例文前面筛选出PPS genes做分子分型，然后想找high PPS
score病人的潜在药物。 自己的数据，可以用感兴趣的基因集替换PPS
genes。
例文几个Figure的画法可参考相应的FigureYa：
Figure 2DE、Fig. S6和Fig. S8C，可参考FigureYa85timeROC
Figure 3ABC，可参考FigureYa161stemness
Figure 5BC，可参考FigureYa59volcano
Fig. S3，可参考FigureYa141risk
Fig.
S4B，可参考FigureYa92immune_gene，C可参考FigureYa68friends，D可参考FigureYa165heatmapPvalue
Fig.
S5，可参考FigureYa30nomogram，FigureYa138NiceCalibration
FigureYa227boxdensity复现了Figure
5D，展示两组之间对于索拉菲尼药物治疗敏感性的差异。
FigureYa212drugTarget复现了Figure
5FG，利用细胞系表达谱（CCLE）及药敏结果（PRISM和CTRP），预测癌症样本的药敏结果。
FigureYa213customizeHeatmap复现了Figure 6，实现CMap
analysis及画图。
Identification of potential drug targets for high PPS score HCCs The
previous analysis screened PPS genes for molecular subtyping, and now
aims to identify potential drugs for patients with high PPS scores. For
your own data, you can replace PPS genes with gene sets of interest.
The following figures from the example paper can be reproduced using
the corresponding FigureYa tools:
Figure 2DE, Fig. S6, and Fig. S8C: Refer to
FigureYa85timeROC
Figure 3ABC: Refer to FigureYa161stemness
Figure 5BC: Refer to FigureYa59volcano
Fig. S3: Refer to FigureYa141risk
Fig. S4B: Refer to FigureYa92immune_gene ; C: Refer to
FigureYa68friends ; D: Refer to FigureYa165heatmapPvalue
Fig. S5: Refer to FigureYa30nomogram and
FigureYa138NiceCalibration
FigureYa227boxdensity reproduces Figure 5D, showing differences
in sensitivity to sorafenib treatment between two groups.
FigureYa212drugTarget reproduces Figure 5FG, predicting drug
sensitivity in cancer samples using cell line expression profiles (CCLE)
and drug response data (PRISM and CTRP).
FigureYa213customizeHeatmap reproduces Figure 6, performing CMap
analysis and visualization.
环境设置
Environment Setup
source("install_dependencies.R")
library(readr)
library(ggplot2)
library(ggrepel)
library(cowplot)

# 显示英文报错信息
# Show English error messages
Sys.setenv(LANGUAGE = "en") 

# 禁止chr转成factor
# Prevent character-to-factor conversion
options(stringsAsFactors = FALSE)
输入文件
Input Files
例文补充材料中的特征已整理到txt文件中，便于套用。
The features from the supplementary materials of the example paper
have been compiled into a txt file for easy application.
药物靶点信息
Drug Target Information
来自例文补充材料Table S10，是例文作收集的target information of 6125
compounds。用到自己的文章里，记得引用例文哦～
From Table S10 of the supplementary materials of the example paper,
this is the target information of 6,125 compounds collected by the
authors. If you use it in your own paper, remember to cite the example
paper~
Tinfo <- read.delim("table s10 target.txt",sep = "\t",row.names = NULL,header = T,check.names = F,stringsAsFactors = F)
特征基因集（以例文的PPS genes为例）
Feature Gene Set (Using the PPS Genes from the Example Paper as an
Example)
实际应用时，替换为自己感兴趣的基因集。
In practical applications, replace it with your gene set of
interest.
# PPS相关的基因和对应系数，来自例文补充材料Table S3
# PPS-related genes and their corresponding coefficients, sourced from Table S3 of the supplementary materials in the example paper
pps.coef <- read.table("table s3 pps.txt",sep = "\t",row.names = NULL,header = T,check.names = F,stringsAsFactors = F)
临床肿瘤数据
Clinical Oncology Data
# CHCC队列HCC的表达谱（仅保留了所需的基因）
# CHCC cohort HCC expression profiles (retaining only required genes) 
tpm <- read.table("LIHC-CN-TPM.subset.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
is.element(pps.coef$Symbol, rownames(tpm))
# CHCC队列HCC的突变信息（仅保留了TP53基因的突变信息）
# CHCC cohort HCC mutation data (retaining only TP53 mutation information) 
maf <- read_tsv("LIHC-CN-MAF.subset.txt", comment = "#")
# CHCC队列HCC的临床信息
# CHCC cohort HCC clinical information
sinfo <- read.delim("LIHC-CN-SINFO.txt",sep = "\t",row.names = NULL,check.names = F,stringsAsFactors = F,header = T)

# 修正表达谱列名，前159个样本为正常，后159个样本为肿瘤
# Adjust expression profile column names: first 159 samples are normal, last 159 are tumor
colnames(tpm) <- c(sinfo$`Adjacent liver tissue (N) sample ID`, sinfo$`Tumor (T) sample ID`)

# 取出TP53突变的样本以及对应的表达谱
# Extract TP53-mutated samples and their corresponding expression profiles
mutsam <- unique(maf$Tumor_Sample_Barcode)
tpm <- tpm[,mutsam]

# 计算CHCC队列的PPS得分
# Calculate PPS scores for the CHCC cohort
pps <- apply(tpm, 2, function(x) {x %*% pps.coef$Coefficient})
range(pps)
# 加载CHCC队列蛋白组学数据（仅保留了和药物靶点有交集的蛋白）
# Load CHCC cohort proteomics data (retaining only proteins overlapping with drug targets)
proteome <- read.table("LIHC-CN-Proteome.subset.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
compro <- intersect(rownames(proteome), Tinfo$`Target genes`)
proteome <- proteome[compro, names(pps)]
细胞系数据
Cell Line Data
原版细胞系数据下载地址：
https://depmap.org/portal/download/all/
。我下载好的在百度网盘：
https://pan.baidu.com/s/1KyTmM1YA6U2uxJNGl1BcVg?pwd=mn6f
The original cell line data can be downloaded from:
https://depmap.org/portal/download/all/
. Pre-downloaded
files are available on BaiduNetdisk:
https://pan.baidu.com/s/1KyTmM1YA6U2uxJNGl1BcVg?pwd=mn6f
# 加载细胞系信息（文件名：sample_info.csv）
# Load cell line information (Filename: sample_info.csv)
Cinfo <- read.csv("sample_info.csv", row.names = 1,check.names = F,stringsAsFactors = F,header = T)

# 加载细胞系表达谱（文件名：CCLE_expression.csv）
# Load cell line expression profiles (Filename: CCLE_expression.csv)
expr.ccle <- read.csv("CCLE_expression.csv", row.names = 1, check.names = F, stringsAsFactors = F, header = T)

# 加载CERES score（文件名：CRISPR_gene_effect.csv）
# Load CERES scores (Filename: CRISPR_gene_effect.csv)
ceres <- read.csv("CRISPR_gene_effect.csv", row.names = 1,check.names = F, stringsAsFactors = F, header = T)

# 加载细胞系突变（文件名：CCLE_mutations.csv）
# Load cell line mutation data (Filename: CCLE_mutations.csv)
maf.ccle <- read.csv("CCLE_mutations.csv", row.names = NULL,check.names = F, stringsAsFactors = F, header = T)

# 提取HCC相关携带TP53突变的细胞系，并且具有对应的表达谱和CERES值
# Extract HCC-related cell lines with TP53 mutations that have matching expression profiles and CERES values
Cinfo.hcc <- Cinfo[which(Cinfo$primary_disease == "Liver Cancer"),]
maf.hcc <- maf.ccle[which(maf.ccle$DepMap_ID %in% rownames(Cinfo.hcc)),]
maf.hcc <- maf.hcc[which(maf.hcc$Hugo_Symbol == "TP53"),]
mutsam.ccle <- unique(maf.hcc$DepMap_ID)
is.element(mutsam.ccle, rownames(expr.ccle))
is.element(mutsam.ccle, rownames(ceres))
mutsam.ccle <- intersect(mutsam.ccle, rownames(expr.ccle))
mutsam.ccle <- intersect(mutsam.ccle, rownames(ceres))


# 处理表达谱并计算PPS得分
# Process expression profiles and calculate PPS scores

expr.ccle <- expr.ccle[mutsam.ccle,]

# 修改列名
# Modify column names
colnames(expr.ccle) <- sapply(strsplit(colnames(expr.ccle), " (", fixed = T), "[", 1) 

expr.ccle <- as.data.frame(t(expr.ccle))

# 发现VARS未匹配到，GeneCards检查一下发现有同名为VARS1
# Found that "VARS" was not matched; checking GeneCards revealed a synonym "VARS1" 
is.element(pps.coef$Symbol, rownames(expr.ccle))
# 发现存在VARS1
# Confirmed presence of "VARS1"
is.element("VARS1", rownames(expr.ccle))
# 将VARS1替换为VARS
# Replace "VARS1" with "VARS"
rownames(expr.ccle)[which(rownames(expr.ccle) == "VARS1")] <- "VARS" 

# 此时全部匹配
# Now all genes are matched
is.element(pps.coef$Symbol, rownames(expr.ccle))
# 计算PPS得分
# Calculate PPS scores
pps.ccle <- apply(expr.ccle[pps.coef$Symbol,], 2, function(x) {x %*% pps.coef$Coefficient})

range(pps.ccle)
# 处理CERES得分矩阵并提取共享的药物靶点
# Process CERES score matrix and extract shared drug targets
ceres <- ceres[mutsam.ccle,]
colnames(ceres) <- sapply(strsplit(colnames(ceres), " (", fixed = T), "[", 1) # 修改列名
ceres <- as.data.frame(t(ceres))
comtarget <- intersect(Tinfo$`Target genes`, rownames(ceres)) # 提取和CERES矩阵共享的靶点
comtarget <- intersect(comtarget, rownames(proteome)) # 提取同时又共享CHCC蛋白谱的靶点

# 将DepMapID修正为细胞系名称
# Convert DepMap IDs to cell line names
mapID <- Cinfo.hcc[mutsam.ccle, "stripped_cell_line_name"]
colnames(expr.ccle) <- mapID
colnames(ceres) <- mapID
names(pps.ccle) <- mapID
相关性分析及筛选
Correlation Analysis and Screening
对每个药物靶点，计算蛋白谱表达和临床样本的PPS相关性，以及CERES矩阵和细胞系的PPS相关性，设定阈值筛选候选药物靶点。原文：
首先，计算了
可成药蛋白表达水平与PPS之间的相关系数
，筛选出163个相关系数大于0.30（P
< 0.05）的蛋白靶点。
随后，基于TP53突变型肝癌细胞系开展
CERES评分与PPS评分的相关性分析
，进一步鉴定出43个不良预后依赖性靶点（Spearman相关系数r
< -0.5且P < 0.05）
For each drug target, calculate the correlation between proteomic
expression and PPS scores in clinical samples, as well as the
correlation between the CERES matrix and PPS scores in cell lines. Apply
threshold criteria to screen for candidate drug targets. Original
text:
First, the
correlation coefficient between the expression
level of druggable proteins and PPS
was calculated, and 163
protein targets were identified with correlation coefficient more than
0.30 (P < 0.05).
Next, through conducting
correlation analysis between CERES
score and PPS score
based on TP53-mutant hepatoma cell lines,
we further identified 43 poor prognosis-dependent targets (Spearman’s r
< −0.5 and P < 0.05)
corProteome <- corCERES <- NULL
for (i in comtarget) {
  
  # 确定该靶点所对应的药物
  # Identify drugs corresponding to the target
  drug <- paste(Tinfo[which(Tinfo$`Target genes` == i), "Agent names"], collapse = " | ") 
  
  ## 蛋白谱表达和临床样本的PPS相关性分析
  ## Correlation between proteomic expression and clinical PPS scores
  cor <- cor.test(as.numeric(proteome[i, names(pps)]),
                  as.numeric(pps),
                  method = "spearman") 
  corProteome <- rbind.data.frame(corProteome,
                                  data.frame(target = i,
                                             r = cor$estimate,
                                             p = cor$p.value,
                                             drug = drug,
                                             row.names = i,
                                             stringsAsFactors = F),
                                  stringsAsFactors = F)
  
  ## CERES矩阵和细胞系的PPS相关性分析
  ## Correlation between CERES scores and cell line PPS scores  
  cor <- cor.test(as.numeric(ceres[i, names(pps.ccle)]),
                  as.numeric(pps.ccle),
                  method = "spearman")
  corCERES <- rbind.data.frame(corCERES,
                               data.frame(target = i,
                                          r = cor$estimate,
                                          p = cor$p.value,
                                          drug = drug,
                                          row.names = i,
                                          stringsAsFactors = F),
                               stringsAsFactors = F)
  
}

# 保存到文件
# Save results
write.table(corProteome, file = "output_correlation between proteome and pps in china cohort.txt", sep = "\t",row.names = F, col.names = T, quote = F)
write.table(corCERES, file = "output_correlation between ceres and pps in ccle dataset.txt", sep = "\t", row.names = F, col.names = T, quote = F)

# 根据原文阈值筛选对应的候选靶点
# Filter candidate targets using original thresholds

# 蛋白谱靶点值与PPS需正相关
# Positive correlation for proteome
candidate.proteome <- corProteome[which(corProteome$r > 0.3 & corProteome$p < 0.05),] 

# CERES靶点值与PPS需负相关
# Negative correlation for CERES
candidate.CERES <- corCERES[which(corCERES$r < -0.5 & corCERES$p < 0.05),] 

# 匹配上了原文中的3个，也许还存在数据标准化问题导致结果不完全一致
# Matched 3 targets as in original paper (minor discrepancies may exist due to data normalization)
candidate.target <- intersect(candidate.proteome$target, candidate.CERES$target) 

# 把筛选出的药物靶点保存到文件
# Save candidate targets
write.table(candidate.target, "output_candidate.target.txt", quote = F, row.names = F)
开始画图
Plotting
# 设置颜色
# Set color palette
grey <- "#BFBFBF"
lightred <- "#FDC9B5"
red <- "#E9583A"
lightblue <- "#37D3FF"
blue <- "#137BCD"
蛋白谱相关性
Proteomic Correlation Analysis
# 给颜色做编号，基础为A，显著的为B，感兴趣的为C
# Assign color codes: A (base), B (significant), C (targets of interest)
corProteome$color <- "A" 
corProteome[which(corProteome$r > 0.3 & corProteome$p < 0.05), "color"] <- "B"  
corProteome[candidate.target,"color"] <- "C" 

# 同理给大小做编号
# Assign size codes following same logic 
corProteome$size <- "A" 
corProteome[which(corProteome$r > 0.3 & corProteome$p < 0.05), "size"] <- "B"
corProteome[candidate.target,"size"] <- "C"

# 让想突出的靶点出现在列表的末尾，这样绘图时不会被其他点所遮挡
# Reorder to ensure highlighted targets appear on top layer
corProteome <- corProteome[order(corProteome$color),] 

selecttargets <- corProteome[candidate.target,]
selecttargets$label <- rownames(selecttargets)

p1 <- ggplot(corProteome, aes(r, -log10(p))) + 
  geom_point(aes(color = color, size = size)) + 
  scale_color_manual(values = c(grey, lightred, red))+ 
  scale_size_manual(values = c(1,2,3)) +  
  xlab("Spearman's rank correlation coefficient") + 
  ylab("-log10(P-value)") +
  scale_x_continuous(
    breaks = c(-0.6,-0.3,0,0.3,0.6), 
    labels = c(-0.6,-0.3,0,0.3,0.6),
    limits = c(-0.6, 0.6)) + 
  geom_vline(xintercept = 0.3, color="grey70",
             linetype = "longdash", lwd = 0.6) + 
  geom_hline(yintercept = -log10(0.05), color = "grey70", 
             linetype = "longdash", lwd = 0.6) +
  theme_bw() +
  theme(axis.ticks = element_line(size = 0.2, color = "black"),
        axis.ticks.length = unit(0.2, "cm"),
        axis.text = element_text(size = 10, color = "black"),
        axis.title = element_text(size = 10, color = "black"),
        panel.background = element_blank(),
        panel.grid = element_blank(),
        legend.position = "none")
p1
# 将感兴趣的靶点信息添加上文字标签
# Add target labels using repel to prevent overlap 
p2 <- p1 + 
  geom_text_repel(data = selecttargets, 
                  aes(x = r, y = -log10(p), 
                      label = label),
                  colour="black", 
                  size = 4, 
                  box.padding = unit(1, "lines"), 
                  point.padding = unit(2, "lines"))

p2
# 注意：原图中靶点下方的对应药物是后期AI的，这里建议参照生成的txt文件，将对应药物AI修饰上去
# Note: Drug annotations shown below targets in original figure were added post-hoc using AI. Suggested workflow: Use corresponding drugs from txt file and add similar AI-assisted annotations.
ggsave(filename = "correlation between proteome and pps in china cohort.pdf", width = 5,height = 5)
p.proteome <- p2
CERES相关性
CERES Score Correlation Analysis
corCERES$color <- "A"
corCERES[which(corCERES$r < -0.5 & corCERES$p < 0.05), "color"] <- "B"
corCERES[candidate.target, "color"] <- "C"
corCERES$size <- "A"
corCERES[which(corCERES$r < -0.5 & corCERES$p < 0.05), "size"] <- "B"
corCERES[candidate.target, "size"] <- "C"

# 让想突出的靶点出现在列表的末尾，这样绘图时不会被其他点所遮挡
# Reorder to ensure highlighted targets appear on top layer
corCERES <- corCERES[order(corCERES$color),] 

selecttargets <- corCERES[candidate.target,]
selecttargets$label <- rownames(selecttargets)

p1 <- ggplot(corCERES, aes(r, -log10(p))) + 
  geom_point(aes(color = color, size = size)) + 
  scale_color_manual(values = c(grey, lightblue, blue))+
  scale_size_manual(values = c(1,2,3)) + 
  xlab("Spearman's rank correlation coefficient") + 
  ylab("-log10(P-value)") +
  scale_x_continuous(
    breaks = c(-0.8,-0.5,0,0.5,0.8), 
    labels = c(-0.8,-0.5,0,0.5,0.8),
    limits = c(-0.8, 0.8)) + 
  geom_vline(xintercept = -0.5, color = "grey70", 
             linetype = "longdash", lwd = 0.6) + 
  geom_hline(yintercept = -log10(0.05), color = "grey70", 
             linetype = "longdash", lwd = 0.6) +
  theme_bw() +
  theme(axis.ticks = element_line(size = 0.2, color = "black"),
        axis.ticks.length = unit(0.2, "cm"),
        axis.text = element_text(size = 10, color = "black"),
        axis.title = element_text(size = 10, color = "black"),
        panel.background = element_blank(),
        panel.grid = element_blank(),
        legend.position = "none")
p1
p2 <- p1 + 
  geom_text_repel(data = selecttargets,
                  aes(x = r, y = -log10(p), 
                      label = label),
                  colour="black", 
                  size = 4, 
                  box.padding = unit(1, "lines"), 
                  point.padding = unit(2, "lines"))

p2
# 注意：原图中靶点下方的对应药物是后期AI的，这里建议参照生成的txt文件，将对应药物AI修饰上去
# Note: Drug annotations shown below targets in original figure were added post-hoc using AI. Suggested workflow: Use corresponding drugs from txt file and add similar AI-assisted annotations.
ggsave(filename = "correlation between ceres and pps in ccle dataset.pdf", width = 5,height = 5)
p.ccle <- p2
相关性子图
Correlation Subplots
scatterProteome <- scatterCERES <- list()
for (i in candidate.target) {
  tmp <- data.frame(var = as.numeric(proteome[i, names(pps)]), pps = as.numeric(pps))
  cor <- cor.test(tmp$var,
                  tmp$pps,
                  method = "spearman")
  
  # 构建相关性值的文字标签
  # Create correlation label
  txt <- paste0("r = ", round(cor$estimate,2), "\n", "P = ", round(cor$p.value,4)) 
  
  scatterProteome[[i]] <- 
    ggplot(tmp, aes(pps, var)) + 
    geom_ribbon(stat = "smooth", method = "lm", se = TRUE, 
                fill = alpha(lightred, 0.6)) + 
    geom_smooth(span = 2, method = lm, color = red, fill = NA) + 
    geom_point(color = red, size = 2) + 
    xlab("PPS scores") + 
    ylab(paste0("Protein abundance of ", i)) +
    theme_bw() +
    theme(axis.ticks = element_line(size = 0.2, color = "black"),
          axis.ticks.length = unit(0.2, "cm"),
          axis.text = element_text(size = 10, color = "black"),
          axis.title = element_text(size = 10, color = "black"),
          axis.line = element_line(colour = "black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),
          panel.border = element_blank(),
          panel.background = element_blank()) +
    annotate("text", 
             x = min(tmp$pps), 
             y = max(tmp$var), 
             hjust = 0, fontface = 4, 
             label = txt)
  scatterProteome[[i]]
  ggsave(filename = paste0("scatter plot between pps and protein abundance of ", i, ".pdf"), width = 5, height = 5)
  
  tmp <- data.frame(var = as.numeric(ceres[i, names(pps.ccle)]), pps = as.numeric(pps.ccle))
  cor <- cor.test(tmp$var,
                  tmp$pps,
                  method = "spearman")
  txt <- paste0("r = ", round(cor$estimate,2), "\n", "P = ", round(cor$p.value, 4))
  scatterCERES[[i]] <- 
    ggplot(tmp, aes(pps, var)) + 
    geom_ribbon(stat = "smooth", method = "lm", se = TRUE,
                fill = alpha(lightblue, 0.6)) + 
    geom_smooth(span = 2, method = lm, color = blue, fill = NA) +
    geom_point(color = blue, size = 2) + 
    geom_hline(yintercept = 0, color=red, 
               linetype="longdash", lwd = 0.6) +
    xlab("PPS scores") + 
    ylab(paste0("CERES score of ", i)) +
    theme_bw() +
    theme(axis.ticks = element_line(size = 0.2, color = "black"),
          axis.ticks.length = unit(0.2, "cm"),
          axis.text = element_text(size = 10, color = "black"),
          axis.title = element_text(size = 10, color = "black"),
          axis.line = element_line(colour = "black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),
          panel.border = element_blank(),
          panel.background = element_blank()) +
    annotate("text", 
             x = min(tmp$pps), 
             y = max(tmp$var), 
             hjust = 0, fontface = 4, 
             label = txt)
  scatterCERES[[i]]
  ggsave(filename = paste0("scatter plot between pps and ceres score of ", i, ".pdf"), width = 5, height = 5)
}
组图
Composite Figure
p <- 
  plot_grid(p.proteome, scatterProteome[[1]], scatterProteome[[2]], scatterProteome[[3]], scatterProteome[[4]], 
          p.ccle, scatterCERES[[1]], scatterCERES[[2]], scatterCERES[[3]], scatterCERES[[4]],
          nrow = 2)
ggsave(filename = "combined plot.pdf", width = 12, height = 5)
Session Info
sessionInfo()
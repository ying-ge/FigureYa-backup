FigureYa186swimmerplot
FigureYa186swimmerplot
Author(s)
: Xiaofan Lu
Reviewer(s)
: Ying Ge, Junyi Shen
Date
: 2025-09-22
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Requirement
画swimmer plot，草图如下： Draw the swimmer plot. The sketch is as
follows:
类似的文章里的图 Similar pictures in articles
出自
https://ascopubs.org/doi/full/10.1200/JCO.2017.76.9901
fromhttps://ascopubs.org/doi/full/10.1200/JCO.2017.76.9901
应用场景
Application Scenarios
根据预后或治疗特点绘制带有记号的时间柱状图。 Draw a marked time bar
chart based on prognosis or treatment characteristics.
通常跟waterfall plot一起用，画法可参考FigureYa39bar。 It is usually
used in conjunction with waterfall plot. For the drawing method, you can
refer to FigureYa39bar.
这里用base plot画，还可以尝试用ggplot2来画。 Here it is drawn using
base plot. You can also try to draw it using ggplot2.
环境设置
Environment Setup
source("install_dependencies.R")
library(shape) #用于画箭头 # For drawing arrows

Sys.setenv(LANGUAGE = "en") #显示英文报错信息  # displays an English error message
options(stringsAsFactors = FALSE) #禁止chr转成factor  # prohibit chr from being converted to factor
输入文件
Input File
easy_input.csv，每行一个patient，至少包含三列时间，及其对应的状态。
easy_input.csv, one patient per row, containing at least three columns
of time and their corresponding status.
# 读取数据
# Reading Data
dat <- read.table("easy_input.txt",sep = "\t",header = T,check.names = F,stringsAsFactors = F,row.names = 1)
head(dat)
# 根据生存时间排序，以便图例可显示在右下角
# Sort by survival time so that the legend can be displayed in the lower right corner
dat <- dat[order(dat$OS.time,decreasing = F),]
开始画图
Start drawing
选择哪些配色，特殊符号选什么形状（用?pch查看可选的形状），全凭个人/期刊的喜好了。看注释调整参数，就可以修改成自己喜欢的样子。
Which color schemes should be chosen? What shapes should be selected for
special symbols? It all depends on personal or journal preferences to
view the optional shapes on pch. By referring to the annotations and
adjusting the parameters, you can modify it to the way you like.
这里分别以需求者提供的草图和例文example为例。
两者主要区别
在于细节的参数调整：坐标轴、颜色、线条粗细、特殊符号的形状，以及特殊符号跟bar之间的间距。
Here, we take the sketch and the example provided by the demander as
examples respectively. The main difference between the two lies in the
adjustment of detailed parameters: coordinate axes, color, line
thickness, the shape of special symbols, and the distance between
special symbols and the bar.
用base plot来画图，优点是自由，想画啥就画啥。 Using base plot to draw
graphs has the advantage of freedom. You can draw whatever you want.
如果你想分段运行，就从plot开始到你要看的代码为止来运行。一定要从plot开始。
If you want to run it in segments, run it from plot to the code you want
to view. Be sure to start with plot.
按需求者提供的草图draft来画
Draw according to the draft provided by the demander
# 设置颜色
# Set Colors
orange <- "#fa7921"
darkred   <- "#F2042C"
darkblue  <- "#1d00ff"
peach  <- "#E43889"

# 1. 张开画布
# 1. Open the canvas
par(bty = "o", mgp = c(1.5,.33,0), mar = c(3,3,1,2),las = 1, tcl = -.25)
plot(NULL,NULL,
     xlim = c(0,max(dat$OS.time)) + max(dat$OS.time)/10,
     ylim = c(1,nrow(dat)),
     xlab = "Time (Years)",
     ylab = "",
     yaxt = "n")
axis(side = 2,at = seq(1,nrow(dat)),labels = rownames(dat))

# 2. 主时间轴：overall survival（时间最长）
# 2. Main Timeline: overall survival (Longest Time)
for (p in 1:nrow(dat)) {
  lines(c(0,dat[p,"OS.time"]),
        c(p,p),
        lwd = 5,
        col = orange)
  
  # 如果病人有新治疗并且时间可得
  # If the patient has a new treatment and the time is available
  if(dat[p,"New_therapy"] == "Yes") {
    lines(c(dat[p,"Therapy_time"],dat[p,"OS.time"]),
          c(p,p),
          lwd = 3,
          col = peach)}
  
  # 如果病人活着添加箭头
  # Add arrows if the patient is alive
  if(dat[p,"OS"] == "Alive") {
    Arrowhead(dat[p,"OS.time"],p,lcol = darkred,arr.type = "triangle")
  } else if(dat[p,"OS"] == "Dead") { # 如果病人死亡添加方块  # Add a block if the patient dies
    points(dat[p,"OS.time"],p,col = darkblue,pch = 15,cex = 2)
  } else if(dat[p,"OS"] == "Missing") { # 如果病人失访添加星星（六芒星） # Add a star (hexagram)
    points(dat[p,"OS.time"],p,col = "black",pch = 24,cex = 1.5,bg = "black") # 上三角  # upper triangle
    points(dat[p,"OS.time"],p,col = "black",pch = 25,cex = 1.5,bg = "black") # 下三角  # lower triangle
  }
}

# 3. 次时间轴：progression free survival（时间落在OS区间内）
# 3. Sub-timeline: progression free survival (Time falls within the OS interval)
for (p in 1:nrow(dat)) {
  # 如果病人疾病进展添加圆圈
  # Add circles if the patient's disease progresses
  if(dat[p,"PFS"] == "DP") {
    points(dat[p,"PFS.time"],p,col = darkred,pch = 19, cex = 2)
  } else {next()}
}
# 4. 绘制图例（这里要根据图片大小调整的，或者后期AI更加方便）
# 4. Draw Legends (This needs to be adjusted according to the size of the image, or it will be more convenient for AI later)
# 4.1 存活
# 4.1 Survival
Arrowhead(25,3.75,
          lcol = darkred,arr.type = "triangle")
text(26,3.75,"Alive",pos = 4)

# 4.2 死亡
# 4.2 Death
filledrectangle(mid = c(25,3),
                wx = 0.2,wy = 1,
                col = darkblue,
                angle = 270)
text(26,3,"Dead",pos = 4)

# 4.3 疾病进展
# 4.3 Disease Progression
points(25,2.25,col = darkred,pch = 19, cex = 2)
text(26,2.25,"DS",pos = 4)

# 4.4 失访
# 4.4 Lost to Follow-up
points(25,1.5,col = "black",pch = 24,cex = 1.5,bg = "black")
points(25,1.5,col = "black",pch = 25,cex = 1.5,bg = "black")
text(26,1.5,"Missing",pos = 4)
dev.copy2pdf(file = "swimmer_draft.pdf",width = 6,height = 3)
按例文example来画
Draw according to the example text
# 设置颜色
# Set Colors
jcoBlue <- "#248EC9"
jcoYellow <- "#EDC622"
jcoRed <- "#BE5D54"

# 1. 张开画布
# 1. Open the canvas
par(bty = "o", mgp = c(1.5,.33,0), mar = c(3,3,1,2),las = 1, tcl = -.25)
plot(NULL,NULL,
     xlim = c(0,max(dat$OS.time)) + max(dat$OS.time)/10,
     ylim = c(1,nrow(dat)),
     xlab = "Time (Years)",
     ylab = "Patients With Response",
     yaxt = "n")
axis(side = 2,tck = 0, #不显示刻度线  # Do not display the scale lines
     at = seq(1,nrow(dat)),
     labels = rep("", nrow(dat))) #y轴不显示patient编号   # The Y-axis does not display the patient number

# 2. 主时间轴：overall survival（时间最长）
# 2. Main Timeline: overall survival (Longest Time)
for (p in 1:nrow(dat)) {
  lines(c(0,dat[p,"OS.time"]),
        c(p,p),
        lwd = 10, #泳道的粗细  # The thickness of the lane
        col = jcoBlue)
  
  # 如果病人有新治疗并且时间可得
  # If the patient has a new treatment and the time is available
  if(dat[p,"New_therapy"] == "Yes") {
    lines(c(dat[p,"Therapy_time"],dat[p,"OS.time"]),
          c(p,p),
          lwd = 10,
          col = jcoYellow)}
  
  # 如果病人活着添加箭头
  # Add arrows if the patient is alive
  if(dat[p,"OS"] == "Alive") {
    Arrows(dat[p,"OS.time"] + .5, #想留个空白就+0.5，根据自己喜好调整  #If you want to leave a blank space, just add 0.5 and adjust it according to your own preference
              p, dat[p,"OS.time"] + 1.5, p, #带尾的箭头需要x0, y0, x1, y1  # arrows with tails require x0, y0, x1, y1
           lcol = jcoRed, arr.col = jcoRed, #颜色 # color
           lwd = 5, arr.lwd = 1, #粗细 # thickness
           arr.length = .2, arr.width = .3, 
           arr.type = "triangle") # ?Arrows查看用法   # ? Arrows View Usage
  } else if(dat[p,"OS"] == "Dead") { # 如果病人死亡添加十字架  # Add a cross if the patient dies
    points(dat[p,"OS.time"] + 1,
       p,col = jcoRed, pch = 3,
       cex = 1, #大小  # size
       lwd = 5, #粗细  # thickness
       bg = jcoRed) 
  } else if(dat[p,"OS"] == "Missing") { # 如果病人失访添加雪花  # Add snowflakes if the patient is lost to follow-up
    points(dat[p,"OS.time"] + 1, 
           p, col = jcoRed, pch = 8, cex = 1.5, lwd = 3)
  }
}

# 3. 次时间轴：progression free survival（时间落在OS区间内）
# 3. Sub-timeline: progression free survival (Time falls within the OS interval)
for (p in 1:nrow(dat)) {
  # 如果病人疾病进展添加圆圈
  # Add circles if the patient's disease progresses
  if(dat[p,"PFS"] == "DP") {
    points(dat[p,"PFS.time"], p, col = jcoRed,
           pch = 21, lwd = 5, bg = "white",
           cex = 2)
  } else {next()}
}
# 4. 绘制图例（这里要根据图片大小调整的，或者后期AI更加方便）
# 4. Draw Legends (This needs to be adjusted according to the size of the image, or it will be more convenient for AI later)

# 特殊符号的画法跟上面图中保持一致
# The drawing method of the special symbols is consistent with that in the above picture
# 4.1 存活
# 4.1 Survival
Arrows(24.7,3.75,25.5,3.75, #位置坐标  # position coordinates
       lcol = jcoRed, arr.col = jcoRed, #颜色  # color
       lwd = 5, arr.lwd = 1, #粗细  # thickness
       arr.length = .2, arr.width = .3, 
       arr.type = "triangle")
text(26,3.75, "Alive", pos = 4)

# 4.2 死亡
# 4.2 Death
points(25, 3, #位置坐标  # position coordinates
       col = jcoRed, pch = 3,
       cex = 1, #大小  # size
       lwd = 5, #粗细  # thickness
       bg = jcoRed)
text(26,3, "Dead", pos = 4)

# 4.3 疾病进展
# 4.3 Disease Progression
points(25, 2.25, #位置坐标  # position coordinates
       col = jcoRed,
           pch = 21, lwd = 5, bg = "white",
           cex = 2)
text(26,2.25, "DS", pos = 4)

# 4.4 失访
# 4.4 Lost to Follow-up
points(25, 1.5, #位置坐标   # position coordinates
       col = jcoRed, pch = 8, cex = 1.5, lwd = 3)
text(26,1.5, "Missing", pos = 4)
#你可能还想标注蓝色和黄色线的图例，就这样画
# You might also want to mark the legend with blue and yellow lines. Just draw it like this
#legend(24, 5.5, #位置坐标 # location coordinates
#       col = c(jcoBlue, jcoYellow), 
#       legend = c("BlueLineName", "YellowLineName"), 
#       lty = 1, lwd = 10,
#       bty = "n")#不显示图例边框 # Does not display the legend border

dev.copy2pdf(file = "swimmer_example.pdf",width = 7, height = 5)
Session Info
sessionInfo()
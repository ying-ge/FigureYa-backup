FigureYa130SVM_step12
FigureYa130SVM_step12
Yufang Wang, Dongqiang Zeng
2025-5-20
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Requirement Description
筛选差异基因后，用cox
regression、SVM-RFE和FW-SVM算法进一步筛选有预后意义的基因，组成基因甲基化位点或表达的signature。
After filtering differential genes, use Cox regression, SVM-RFE, and
FW-SVM algorithms to further select prognostic genes to construct a gene
methylation site or expression signature.
出自
https://onlinelibrary.wiley.com/doi/full/10.1111/jcmm.14231
Source:
https://onlinelibrary.wiley.com/doi/full/10.1111/jcmm.14231
主要分四步来实现，其中前两步在R里实现，后两步在python里实现，运行完本文档FigureYa130coxSVM_step12.Rmd之后，运行FigureYa130coxSVM_step34.ipynb：
The process consists of four main steps. The first two steps are
implemented in R, and the latter two in Python. After running this
document FigureYa130coxSVM_step12.Rmd, proceed with
FigureYa130coxSVM_step34.ipynb:
第一步，正常人与癌症患者差异化比较 Step 1: Differential analysis
between normal and cancer samples
第二步，寻找相关矩阵，并生成下游数据 Step 2: Identify correlation
matrix and generate downstream data
第三步，REF-SVM寻找合适的特征范围 Step 3: Use REF-SVM to find the
optimal feature range
第四步，FW-SVM进一步喜欢特征数目 Step 4: Use FW-SVM to further
select feature numbers
环境设置
Environment Setup
source("install_dependencies.R")
library(tidyverse)
library(ChAMP)
library(minfi)
library(RColorBrewer)
library(survival)

Sys.setenv(LANGUAGE = "en") #显示英文报错信息 Display error messages in English
options(stringsAsFactors = FALSE) #禁止chr转成factor Prevent automatic conversion of character to factor
输入文件下载
Input File Download
从XENA
https://xenabrowser.net/datapages/
下载两类数据，以GDC
TCGA Liver Cancer (LIHC) (14 datasets)为例： Download two types of data
from XENA using the GDC TCGA Liver Cancer (LIHC) (14 datasets) as an
example:
甲基化数据DNA methylation - Methylation450k，地址：
https://xenabrowser.net/datapages/?dataset=TCGA-LIHC.methylation450.tsv&host=https%3A%2F%2Fgdc.xenahubs.net&removeHub=https%3A%2F%2Fxena.treehouse.gi.ucsc.edu%3A443
，下载链接：
https://gdc.xenahubs.net/download/TCGA-LIHC.methylation450.tsv.gz
DNA methylation data - Methylation450k, location:
https://xenabrowser.net/datapages/?dataset=TCGA-LIHC.methylation450.tsv&host=https%3A%2F%2Fgdc.xenahubs.net&removeHub=https%3A%2F%2Fxena.treehouse.gi.ucsc.edu%3A443
,
Download link:
https://gdc.xenahubs.net/download/TCGA-LIHC.methylation450.tsv.gz
生存数据phenotype, survival data (n=463) GDC Hub，
https://xenabrowser.net/datapages/?dataset=TCGA-LIHC.survival.tsv&host=https%3A%2F%2Fgdc.xenahubs.net&removeHub=https%3A%2F%2Fxena.treehouse.gi.ucsc.edu%3A443
，下载链接：
https://gdc.xenahubs.net/download/TCGA-LIHC.survival.tsv.gz
Survival data: phenotype, survival data (n=463) from GDC Hub,
https://xenabrowser.net/datapages/?dataset=TCGA-LIHC.survival.tsv&host=https%3A%2F%2Fgdc.xenahubs.net&removeHub=https%3A%2F%2Fxena.treehouse.gi.ucsc.edu%3A443
,
Download link:
https://gdc.xenahubs.net/download/TCGA-LIHC.survival.tsv.gz
# 读入甲基化数据
# Read methylation data
nor_methy <- read_tsv("TCGA-LIHC.methylation450.tsv")
nor_methy <- column_to_rownames(nor_methy, var = "Composite Element REF")
nor_methy <- na.omit(nor_methy)

#########################
nor_methy[1:5,1:5]
dim(nor_methy)
colnames(sur_data) <- c("sample", "OS_status", "ID", "OS_time")
sur_data <- sur_data[!is.na(sur_data$OS_time),]
sur_data <- sur_data[!is.na(sur_data$OS_status),]
sur_data <- sur_data[,c("ID","OS_time","OS_status")]
#去除急性进展患者对生存分析的影响
# Remove rapidly progressing patients to avoid bias in survival analysis
sur_data <- sur_data[sur_data$OS_time>30,]
dim(sur_data)
第一步，正常人与癌症患者差异化比较
Step 1: Differential analysis between normal and tumor samples
# 根据TCGA的barcode构建癌和癌旁的分类信号
# Use TCGA barcode to classify tumor and normal samples
sampleid <- colnames(nor_methy)
pdata <- data.frame(ID = sampleid,tissue_type = substring(sampleid,14,16))
head(pdata)
summary(as.factor(pdata$tissue_type))
pdata <- pdata[!pdata$tissue_type=="01B",]
pdata <- pdata[!pdata$tissue_type=="02B",]
pdata$group <- ifelse(pdata$tissue_type=="11A","normal","tumor")
summary(as.factor(pdata$group))
pdata <- pdata[match(colnames(nor_methy),pdata$ID),]
data.frame(pdata$ID,colnames(nor_methy))
#从结果来看UCSC这个标准化做的并不好
# The UCSC normalization seems suboptimal
#########################

# 正常人与癌症患者差异化比较
# Identify differential methylation between tumor and normal
#' @find-Differential-Methylation-Probes
myDMP <- champ.DMP(beta = nor_methy,pheno=pdata$group)
head(myDMP[[1]])
dmp <- myDMP[[1]]
dmp <- dmp[dmp$adj.P.Val<0.05 & abs(dmp$deltaBeta)>0.2,]
dim(dmp)
tumor_methy <- nor_methy[dmp,colnames(nor_methy)%in%tumor_id]
dim(tumor_methy)
#把前面的运行结果保存一下
# Save the tumor methylation matrix
save(tumor_methy,file = "TCGA-LIHC-Tumor-dmp-matrix.RData")
第二步，寻找相关矩阵，并生成下游数据
Step 2: Build correlation matrix and generate downstream data
#读入第一步的运行结果
# Load tumor methylation matrix
(load("TCGA-LIHC-Tumor-dmp-matrix.RData"))
colnames(tumor_methy) <- substring(colnames(tumor_methy),1,12)
tumor_methy <- as.data.frame(t(tumor_methy))
tumor_methy[1:5,1:6]
tumor_methy <- rownames_to_column(tumor_methy,var = "ID")
tumor_methy$ID <- gsub(tumor_methy$ID,pattern = "\\.",replacement = "-")
tumor_methy <- tumor_methy[!duplicated(tumor_methy$ID),]

summary(tumor_methy$ID%in%sur_data$ID)
如果想要获得HR和可信区间，使用批量生存分析，运行时间较长-patience To
obtain HR and confidence intervals, run batch survival analysis. This
may take time – be patient
Coxoutput=data.frame()
for(i in colnames(sur_meth[,4:ncol(sur_meth)])){
  cox <- coxph(Surv(OS_time,OS_status) ~ sur_meth[,i], data = sur_meth)
  coxSummary = summary(cox)
  Coxoutput=rbind(Coxoutput,cbind(gene=i,HR=coxSummary$coefficients[,"exp(coef)"],
                                  z=coxSummary$coefficients[,"z"],
                                  pvalue=coxSummary$coefficients[,"Pr(>|z|)"],
                                  lower=coxSummary$conf.int[,3],
                                  upper=coxSummary$conf.int[,4]))
}
for(i in c(2:6)){
  Coxoutput[,i] <- as.numeric(as.vector(Coxoutput[,i]))
}
Coxoutput <- arrange(Coxoutput,pvalue)  %>% #用pvalue筛选
  filter(pvalue < 0.05)
dim(Coxoutput)
head(Coxoutput)
进一步筛选tumor_methy-矩阵文件-用于向量机的进一步筛选 Further filter
the tumor methylation matrix – to be used for SVM-based feature
selection
rownames(tumor_methy) <- NULL
tumor_methy <- column_to_rownames(tumor_methy,var = "ID")
tumor_methy <- tumor_methy[rownames(tumor_methy)%in%sur_meth$ID,colnames(tumor_methy)%in%sig_dmp]
tumor_methy <- rownames_to_column(tumor_methy,var = "ID")
dim(tumor_methy)
tumor_methy[1:5,1:5]
患者风险分析 Patient risk classification
sur_data <- sur_data[sur_data$ID%in%sur_meth$ID,]
sur_data <- within(sur_data, {
  subtype <- NA
  subtype[(OS_time <= 12) & (OS_status == 1)] <- "High_risk" 
  subtype[(OS_time >= 60) ] <- "Low_risk"
})

sur_data$subtype[is.na(sur_data$subtype)] <- "Inter_risk"
summary(as.factor(sur_data$subtype))
tumor_subtype_methy <- merge(sur_data[,c("ID","subtype")],tumor_methy,by.x="ID",by.y="ID",all.x=F,all.y=F)
tumor_subtype_methy[1:5,1:10]
save(tumor_subtype_methy,file = "TCGA-LIHC-survival-relevant-DMP-matrix.RData")
write.csv(tumor_subtype_methy,"TCGA-LIHC-survival-relevant-DMP-matrix.csv")
接下来将进入第三和第四步，请打开FigureYa130coxSVM_step34.ipynb文件，以第二步生成的TCGA-LIHC-survival-relevant-DMP-matrix.csv文件作为输入。
Next, proceed to Steps 3 and 4. Open the FigureYa130coxSVM_step34.ipynb
notebook and use the CSV file TCGA-LIHC-survival-relevant-DMP-matrix.csv
generated in Step 2 as input.
Session Info
sessionInfo()
FigureYa263panDiff
FigureYa263panDiff
Author(s)
: Xiaofan Lu; Yasi Zhang
Reviewer(s)
: Ying Ge
Date
: 2025-05-20
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Demand description
想实现这篇铁死亡泛癌的其他图片，主要是Figure
1。感觉这个套路只要换一个通路就可以测试，我看Xiaofan
Lu写了这篇文章的Figure
2A（铁死亡基因在泛癌肿瘤与正常的差异箱线图，FigureYa208FPI），Figure
3B（铁死亡与免疫通路的相关性，FigureYa253panGSEA），可否请Xiaofan
Lu详细写一下文章Figure 1的相关代码？
1A（铁死亡在泛癌中体细胞拷贝数变异情况，绘制条形图）
1B（铁死亡基因在肿瘤与正常的差异表达，绘制拼接的点图和柱状图）
1C（铁死亡基因体细胞拷贝数与基因表达的相关性点图）
1D（铁死亡基因肿瘤与正常组织甲基化状态点图）
1E（铁死亡转录组表达与启动子甲基化相关性的点图）
这些图都是泛癌的，不知道Xiaofan
Lu可不可以用例文数据分别实现个教程？（感觉都可以出一期专栏——iSicence复现了哈哈）
这次实现Figure
1B，铁死亡基因在肿瘤与正常的差异表达，绘制拼接的点图和柱状图。
I would like to draw other figures from this pan-cancer ferroptosis
paper, especially Figure 1. This analytical framework seems easily
adaptable - just switch the pathway for testing. I noticed Xiaofan Lu
has already shared code for Figure 2A (boxplots showing differential
expression of ferroptosis genes in tumors vs normals across cancers,
FigureYa208FPI) and Figure 3B (correlation between ferroptosis and
immune pathways, FigureYa253panGSEA). Could Xiaofan Lu please provide
detailed code for Figure 1?
1A (somatic copy number alterations of ferroptosis genes across
cancers, bar plot)
1B (differential expression of ferroptosis genes in tumors vs
normals, composite dot and bar plots)
1C (correlation scatter plot between somatic copy number and gene
expression of ferroptosis genes)
1D (methylation status scatter plot of ferroptosis genes in tumor vs
normal tissues)
1E (scatter plot showing correlation between transcriptomic
expression and promoter methylation of ferroptosis genes)
Since these are all pan-cancer analyses, could Teacher Dayu create
separate tutorials using the example data? (This could even become a
column - “iScience Replication”!)
This time we’re crowdsourcing Figure 1B: differential expression of
ferroptosis genes in tumors vs normals, to create composite dot and bar
plots.
出自：
https://linkinghub.elsevier.com/retrieve/pii/S2589004220304892
图1. 铁死亡调控基因(FRGs)的异常表达。
其中正调控因子和负调控因子分别用红色和蓝色标记。 (B)
柱状图(上图)显示显著差异表达基因的数量，热图展示各癌症中FRGs的倍数变化和FDR值。显著上调和下调的基因分别用红色和绿色标记。
Source:
https://linkinghub.elsevier.com/retrieve/pii/S2589004220304892
Figure 1. The Dysregulation of Ferroptosis Regulator Genes (FRGs).
For which the positive and negative regulators are marked in red and
blue, respectively. (B) Histogram (upper panel) shows the number of
significantly differentially expressed genes, and the heatmap shows the
fold change and FDR of FRGs in each cancer. Significantly upregulated
and downregulated genes are marked in red and green, respectively.
应用场景
Application scenarios
分析基因在肿瘤与正常组织中的差异表达情况并绘制拼接的点图与柱状图。
Analyze differential gene expression between tumor and normal tissues
and generate composite dot plots with bar charts.
环境设置
Environment Setup
source("install_dependencies.R")
library(ggplot2)
library(data.table)
library(randomcoloR)
library(ggpubr)
library(GSVA)
library(clusterProfiler)
library(impute)
library(ComplexHeatmap)
source("twoclasslimma.R")

# 显示英文报错信息
# Show English error messages
Sys.setenv(LANGUAGE = "en") 

# 禁止chr转成factor
# Prevent character-to-factor conversion
options(stringsAsFactors = FALSE)
输入文件
Input Files
跟FigureYa253panGSEA使用的是同一套数据，已经下载的小伙伴就不用重复下载了。
merged_sample_quality_annotations.tsv，下载自
https://gdc.cancer.gov/about-data/publications/pancanatlas
，下载地址
http://api.gdc.cancer.gov/data/1a7d7be8-675d-4e60-a105-19d4121bdebf
EBPlusPlusAdjustPANCAN_IlluminaHiSeq_RNASeqV2.geneExp.tsv，表达矩阵，第一列是基因，之后是其在每个样本中的表达量。下载自
http://api.gdc.cancer.gov/data/3586c0da-64d0-4b74-a449-5ff4d9136611
。
The same dataset as used in FigureYa253panGSEA is applied here -
those who have already downloaded it need not download again.
merged_sample_quality_annotations.tsv, downloaded from
https://gdc.cancer.gov/about-data/publications/pancanatlas
,
download link
http://api.gdc.cancer.gov/data/1a7d7be8-675d-4e60-a105-19d4121bdebf
EBPlusPlusAdjustPANCAN_IlluminaHiSeq_RNASeqV2.geneExp.tsv, expression
matrix with genes in the first column followed by their expression
values in each sample. Downloaded from
http://api.gdc.cancer.gov/data/3586c0da-64d0-4b74-a449-5ff4d9136611
# 设置颜色
# Set colors
blue <- "#4577FF"
red <- "#C2151A"
orange <- "#E45737"
green <- "#6F8B35"
darkblue <- "#303B7F"
darkred <- "#D51113"
yellow <- "#EECA1F"

# 获得同时有肿瘤和正常样本的肿瘤名
# Get tumor names that have both tumor and normal samples
tumors <- c("BLCA","BRCA","CESC","CHOL","COAD",
            "ESCA","GBM","HNSC","KICH","KIRC",
            "KIRP","LIHC","LUAD","LUSC","PAAD",
            "PRAD","READ","STAD","THCA","UCEC")

# 获得感兴趣的基因集(TTC35是EMC2的同名)
# Get gene set of interest (TTC35 is alias of EMC2)
frg <- c("CDKN1A","HSPA5","TTC35","SLC7A11","NFE2L2","MT1G","HSPB1","GPX4","FANCD2","CISD1","FDFT1","SLC1A5","SAT1",
         "TFRC","RPL8","NCOA4","LPCAT3","GLS2","DPP4","CS","CARS","ATP5G3","ALOX15","ACSL4","EMC2")

# 读取并处理TCGA样本注释文件
# Read and process TCGA sample annotation file
rawAnno <- read.delim("merged_sample_quality_annotations.tsv",sep = "\t",row.names = NULL,check.names = F,stringsAsFactors = F,header = T)
rawAnno$simple_barcode <- substr(rawAnno$aliquot_barcode,1,15)

# 去重并保留关键列
# Remove duplicates and keep key columns
samAnno <- rawAnno[!duplicated(rawAnno$simple_barcode),c("cancer type", "simple_barcode")]

# 过滤空值记录
# Filter out empty records
samAnno <- samAnno[which(samAnno$`cancer type` != ""),]

# 保存简化版注释文件
# Save simplified annotation file
write.table(samAnno,"simple_sample_annotation.txt",sep = "\t",row.names = F,col.names = T,quote = F)

# 快速读取表达谱
# Quickly read expression profile
expr <- fread("EBPlusPlusAdjustPANCAN_IlluminaHiSeq_RNASeqV2.geneExp.tsv",sep = "\t",stringsAsFactors = F,check.names = F,header = T)

# 转换为数据框并设置行名
# Convert to dataframe and set row names
expr <- as.data.frame(expr); rownames(expr) <- expr[,1]; expr <- expr[,-1]

# 提取基因名（分隔符"|"前的部分）
# Extract gene names (part before "|" separator)
gene <- sapply(strsplit(rownames(expr),"|",fixed = T), "[",1) 
expr$gene <- gene

# 重置行名并移除临时基因列
# Reset row names and remove temporary gene column
expr <- expr[!duplicated(expr$gene),] 
rownames(expr) <- expr$gene; expr <- expr[,-ncol(expr)]

# 取部分表达谱（感兴趣的基因集）
# Extract partial expression profile (gene set of interest)
comgene <- intersect(rownames(expr),frg) 
expr_sub <- expr[comgene,]
colnames(expr_sub) <- substr(colnames(expr_sub),1,15)
expr_sub <- expr_sub[,!duplicated(colnames(expr_sub))]
差异表达分析
Differential Expression Analysis
# 初始化结果存储对象
# Initialize result storage objects
exprTab <- ndegs <- NULL

# 设置差异表达的阈值 (FoldChange = 1.5)
# Set differential expression threshold (FoldChange = 1.5)
log2fc.cutoff <- log2(1.5) 

# 设置差异表达的阈值 (FDR = 0.05)
# Set differential expression threshold (FDR = 0.05)
fdr.cutoff <- 0.05 

# 肿瘤类型迭代分析
# Tumor Type Iterative Analysis
for (i in tumors) {
  message("--",i,"...")
  sam <- samAnno[which(samAnno$`cancer type` == i),"simple_barcode"]
  comsam <- intersect(colnames(expr_sub), sam)
    
  # 获得肿瘤样本
  # Extract tumor samples  
  tumsam <- comsam[substr(comsam,14,14) == "0"] 
  
  # 获得正常样本
  # Extract normal samples
  norsam <- comsam[substr(comsam,14,14) == "1"] 
  
  expr_subset <- expr_sub[,c(tumsam,norsam)]
  
   # 这份数据里存在负值，即便负值比较小，但也要矫正，如果使用其他泛癌表达谱根据情况而定
  # This dataset contains negative values (though small), so correction is needed. Adjust if using other pan-cancer expression data
  expr_subset[expr_subset < 0] <- 0 
  
  # 使用KNN算法填补缺失值
  # Impute missing values using KNN algorithm
  expr_subset <- as.data.frame(impute.knn(as.matrix(expr_subset))$data)
  
  # 保存处理后的表达矩阵
  # Save processed expression matrix
  write.table(expr_subset, paste0("TCGA_",i,"_expr_subset.txt"),sep = "\t",row.names = T,col.names = NA,quote = F)
  
  # 创建样本分组信息
  # Create sample grouping information
  subt <- data.frame(condition = rep(c("tumor","normal"),c(length(tumsam),length(norsam))),
                     row.names = colnames(expr_subset),
                     stringsAsFactors = F)
  
  # 执行limma差异表达分析
  # Perform limma differential expression analysis
  twoclasslimma(subtype  = subt, 
                featmat  = expr_subset, 
                treatVar = "tumor", 
                ctrlVar  = "normal", 
                prefix   = paste0("TCGA_",i), 
                overwt   = T, 
                sort.p   = F, 
                verbose  = TRUE, 
                res.path = ".") 
  
  # 加载差异表达文件
  # Load the differential expression results 
  res <- read.table(paste0("TCGA_",i,"_limma_test_result.tumor_vs_normal.txt"),sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
  
  # 获取上调基因
  # Extract upregulated genes
  upgene <- res[which(res$log2fc > log2fc.cutoff & res$padj < fdr.cutoff),] 
  
  # 获取下调基因
  # Extract downregulated genes
  dngene <- res[which(res$log2fc < -log2fc.cutoff & res$padj < fdr.cutoff),] 
  
  # 基因差异表达的数目以产生图片的上部注释
  # Count differentially expressed genes for upper annotation in figures
  if(nrow(upgene) > 0) {
    nup <- nrow(upgene)
  } else {nup <- 0}
  
  if(nrow(dngene) > 0) {
    ndn <- nrow(dngene)
  } else {ndn <- 0}
  
  # 合并所有基因的分析结果
  # Combine results for all genes
  exprTab <- rbind.data.frame(exprTab,
                              data.frame(gene = rownames(res),
                                         log2fc = res$log2fc,
                                         FDR = res$padj,
                                         tumor = i,
                                         stringsAsFactors = F),
                              stringsAsFactors = F)
  
  # 记录差异基因数量统计
  # Record differential gene count statistics
  ndegs <- rbind.data.frame(ndegs,
                            data.frame(tumor = i,
                                       Group = c("UP","DOWN"),
                                       Number = c(nup,ndn),
                                       stringsAsFactors = F),
                            stringsAsFactors = F)
}
# 设置差异方向的因子水平（确保UP始终在DOWN之前）
# Set factor levels for direction (ensure UP always before DOWN)
ndegs$Group <- factor(ndegs$Group, levels = c("UP","DOWN"))
开始画图
Plotting
# 产生上部注释
# Generate Top Annotation
p_top <- ggplot(data = ndegs) +
  geom_bar(mapping = aes(x = tumor, y = Number, fill = Group), 
           stat = 'identity',position = 'stack') + 
  scale_fill_manual(values = c(orange,green)) +
  theme_classic() + 
  theme(axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        plot.margin = unit(c(1,0,0,1), "lines"))

# 产生下部泡泡图
# Generate Bottom Bubble Plot
exprTab$gene <- factor(exprTab$gene,
                       levels = rev(c("CDKN1A","HSPA5","TTC35","SLC7A11","NFE2L2","MT1G","HSPB1","GPX4","FANCD2","CISD1",           "FDFT1","SLC1A5","SAT1","TFRC","RPL8","NCOA4","LPCAT3","GLS2","DPP4","CS","CARS","ATP5G3","ALOX15","ACSL4")))
my_palette <- colorRampPalette(c(green,"white",orange), alpha=TRUE)(n=128)
p_center <- ggplot(exprTab, aes(x=tumor,y=gene)) +
  geom_point(aes(size=-log10(FDR),color=log2fc)) +
  scale_color_gradientn('log2(FC)', 
                        colors=my_palette) + 
  theme_bw() +
  theme(#panel.grid.minor = element_blank(), 
        #panel.grid.major = element_blank(),
        axis.text.x = element_text(angle = 45, size = 12, hjust = 0.3, vjust = 0.5, color = "black"),
        axis.text.y = element_text(size = 12, color = rep(c(red,blue),c(14,10))),
        axis.title = element_blank(),
        panel.border = element_rect(size = 0.7, linetype = "solid", colour = "black"),
        plot.margin = unit(c(0,0,1,1), "lines"))
# 组合上下两个图形
# Combine top and center plots
ggarrange(p_top,
          p_center, 
          nrow = 2, ncol = 1,
          align = "v",
          heights = c(2,6),
          common.legend = F)
# 保存为PDF文件
# Save as PDF file
ggsave("Figure 1B differential expression of interested genes in pancancer.pdf", width = 8, height = 8)

# 清理内存
# Clean up memory
rm(expr); gc()
Session Info
sessionInfo()
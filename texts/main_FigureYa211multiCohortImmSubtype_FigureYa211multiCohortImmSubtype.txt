FigureYa211multiCohortImmSubtype
FigureYa211multiCohortImmSubtype
Xiaofan Lu
2025-5-20
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
以往的分子分型都是基于基因表达来做的，这有一个是基于多数据集免疫细胞的，输出Fig.1
A和B。
Requirement Description
In the past, molecular typing was based on gene expression, but one
of them is based on multiple datasets of immune cell. Outputs Fig.1 A
and B.
出自
https://www.cell.com/molecular-therapy-family/nucleic-acids/fulltext/S2162-2531(20)30259-6
from
https://www.cell.com/molecular-therapy-family/nucleic-acids/fulltext/S2162-2531(20)30259-6
Figure 1. The Landscape of Immuno-cell Infiltration in the TME of
HNSC (A) Unsupervised clustering of tumor-infiltrating immune cells in
five independent HNSC cohorts. Rows represent tumor-infiltrating immune
cells, and columns represent samples. (B) Kaplan-Meier curves for
overall survival (OS) of all HNSC patients with immune cell-infiltrating
classes. Log rank test showed an overall p = 0.018.
跟FigureYa201ClusterCorrelation、FigureYa203ComBat、FigureYa204PCAscore出自同一篇文章。
It’s from the same article as FigureYa201ClusterCorrelation,
FigureYa203ComBat, and FigureYa204PCAscore.
应用场景
不同平台的表达谱，去除批次效应后，计算免疫富集，并进行分子分型与生存分析。
原文：We performed the CIBERSORT and ESTIMATE algorithms to quantify
the activity or enrichment levels of immune cells in HNSC tumor
tissues.
Application Scenarios
Expression profiles of different platforms, after removing batch
effects, immune enrichment was calculated, and molecular typing and
survival analysis were performed.
Original: We performed the CIBERSORT and ESTIMATE algorithms to
quantify the activity or enrichment levels of immune cells in HNSC tumor
tissues.
环境设置
Environment settings
source("install_dependencies.R")
library(sva)
library(ConsensusClusterPlus)
library(survminer)
library(survival)
library(estimate)
library(pheatmap)
source("CIBERSORT.R")

Sys.setenv(LANGUAGE = "en") #显示英文报错信息 # error messages are displayed in English
options(stringsAsFactors = FALSE) #禁止chr转成factor # chr is not allowed to be converted to factor
自定义函数，用于数据标准化并截断极端值 Custom functions for data
normalization and truncation of extreme values
standarize.fun <- function(indata=NULL, halfwidth=NULL, centerFlag=T, scaleFlag=T) {  
  outdata=t(scale(t(indata), center=centerFlag, scale=scaleFlag))
  if (!is.null(halfwidth)) {
    outdata[outdata>halfwidth]=halfwidth
    outdata[outdata<(-halfwidth)]= -halfwidth
  }
  return(outdata)
}
输入文件
表达矩阵文件，数据下载和预处理可参考FigureYa203ComBat。
TCGA
hnsc的表达数据和生存信息：tcga_hnsc.expr.txt和tcga_hnsc.surv.txt。可以用TCGAbiolinks下载，或从
xena
下载。
来自GEO的芯片数据和生存信息：gse41613.expr.txt和gse41613.surv.txt，gse65858.expr.txt和gse65858.surv.txt
Input files
The expression matrix file, the data download and preprocessing can
be found in FigureYa203ComBat.
Expression data and survival information :tcga_hnsc.expr.txt and
tcga_hnsc.surv.txt of TCGA hnsc. It can be downloaded with TCGAbiolinks,
or from
xena
Chip data and survival information from
GEO:gse41613.expr.txt
and
gse41613.surv.txt, gse65858.expr.txt and gse65858.surv.txt
加载不同平台的表达谱、去除批次效应
Load expression profiles from different platforms to remove batch
effects
# 加载预处理过的表达谱
# Load the pre-treated expression spectrum
tcga.expr <- read.csv("tcga_hnsc.expr.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
gse41613.expr <- read.table("gse41613.expr.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
gse65858.expr <- read.table("gse65858.expr.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)

# 检查数据量级
# Check the amount of data
range(tcga.expr) # 量级很大取对数 # The magnitude is very large and logarithm
tcga.expr <- log2(tcga.expr + 1)
range(tcga.expr) # 量级在0-20 # On the magnitude of 0-20
range(gse41613.expr) # 量级在0-20 # On the magnitude of 0-20
range(gse65858.expr) # 量级在0-20 # On the magnitude of 0-20
# 合并数据集检查批次效应
# Merge datasets to check batch effect
comgene <- intersect(intersect(rownames(tcga.expr), rownames(gse41613.expr)), rownames(gse65858.expr))
combined.expr <- cbind.data.frame(tcga.expr[comgene,],
                                  gse41613.expr[comgene,],
                                  gse65858.expr[comgene,])

# combat去除批次再次检查
# combat remove the batch and check it again
batch <- data.frame(batch = rep(c("TCGA","GSE41613","GSE65858"), times = c(ncol(tcga.expr),ncol(gse41613.expr),ncol(gse65858.expr))))
modcombat = model.matrix(~1, data = batch)
combined.expr.combat <- as.data.frame(ComBat(dat=as.matrix(combined.expr), batch=batch$batch, mod=modcombat))
# 保存到txt格式的文件
# Save to a file in txt format
write.table(combined.expr.combat,"output_combined_expr.txt",sep = "\t",row.names = T,col.names = NA,quote = F)
加载生存数据，用于生存分析
Load survival data for survival analysis
tcga.surv <- read.table("tcga_hnsc.surv.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
tcga.surv <- as.data.frame(na.omit(tcga.surv)) # 去除空值 # Remove null values
rownames(tcga.surv) <- paste0(rownames(tcga.surv),"-01")
gse41613.surv <- read.table("gse41613.surv.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
gse65858.surv <- read.table("gse65858.surv.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)

# 根据数据将时间转化为月份
# Convert time to months based on data
tcga.surv$OS.time <- tcga.surv$OS.time/30.5
gse65858.surv$OS.time <- gse65858.surv$OS.time/30.5

# 合并生存时间
# Merge time-to-live
tcga.surv$Project <- "TCGA"
gse41613.surv$Project <- "GSE41613"
gse65858.surv$Project <- "GSE65858"
combined.surv <- rbind.data.frame(tcga.surv[,c("OS","OS.time","Project")],
                                  gse41613.surv[,c("OS","OS.time","Project")],
                                  gse65858.surv[,c("OS","OS.time","Project")])
计算ESTIMATE得分
output_combined_expr.csv，上一步整合好的表达矩阵和生存信息。
Calculate the ESTIMATE score
output_combined_expr.csv, the previous step integrates the expression
matrix and survival information.
filterCommonGenes(input.f = "output_combined_expr.txt", output.f = "output_combined_expr.gct", id = "GeneSymbol")
estimateScore("output_combined_expr.gct", "output_combined_expr_estimate_score.txt", platform="affymetrix")
运行CIBERSORT
原文：Infiltration levels for distinct immune cells in HNSC were
quantified by using “CIBERSORT” R package and employing the LM22
signature and 1,000 permutations.
使用CIBERSORT前，请先注册
https://cibersort.stanford.edu
，查看教程
http://cibersort.stanford.edu/tutorial.php
LM22.txt，注册后即可下载。
Run CIBERSORT
original paper:Infiltration levels for distinct immune cells in HNSC
were quantified by using “CIBERSORT” R package and employing the LM22
signature and 1,000 permutations.
before use CIBERSORT Please register for
https://cibersort.stanford.edu
first to view the
tutorial
http://cibersort.stanford.edu/tutorial.php
LM22.txt, you can download it after registration.
output_combined_expr.txt，上一步整合好的表达矩阵和生存信息。
output_combined_expr.txt, the previous step integrates the
expression matrix and survival information.
#这步运行时间较长
# This step takes a long time to run
ciber.res <- CIBERSORT(sig_matrix = "LM22.txt",
                       mixture_file = "output_combined_expr.txt",
                       perm = 100,
                       QN = TRUE)
# 保存到文件
# Save to file
write.table(ciber.res,"CIBERSORT result.txt",sep = "\t",row.names = T,col.names = NA,quote = F)
共识PAM聚类
原文：The unsupervised clustering “Pam” method based on Euclidean and
Ward’s linkage was used in this analysis, executed by using the
“ConsensuClusterPlus” R package,23 and repeated 1,000 times to ensure
the classification stability.
Consensus PAM clustering
original paper: The unsupervised clustering “Pam” method based on
Euclidean and Ward’s linkage was used in this analysis, executed by
using the “ConsensuClusterPlus” R package,23 and repeated 1,000 times to
ensure the classification stability.
est <- read.table("output_combined_expr_estimate_score.txt",sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
est <- est[,-1]; colnames(est) <- est[1,]; est <- est[-1,]
colnames(est) <- colnames(combined.expr.combat)

ciber.res <- read.table("CIBERSORT result.txt", sep = "\t", row.names = 1, header = T, check.names = F)
head(ciber.res)
# 合并ESTIMATE获得的activity of immune cells(est)和CIBERSORT获得的enrichment levels of immune cells(ciber.res)
# Merge the activity of immune cells (est) obtained from ESTIMATE and the enrichment levels of immune cells obtained by CIBERSORT (ciber.res)
ciber.res <- ciber.res[,1:22]
ciber.res <- ciber.res[,colSums(ciber.res) > 0] # 去除丰度均为0的细胞 # Remove cells with 0 abundance
input_data <- cbind.data.frame(ciber.res, 
                               ImmuneScore = as.numeric(est["ImmuneScore",rownames(ciber.res)]), # 添加免疫富集 # Add immune enrichment
                               StromalScore = as.numeric(est["StromalScore",rownames(ciber.res)])) # 添加基质富集 # Add matrix enrichment

indata <- t(scale(input_data))

# 这一步，我运行了 < 10 min
# For this step, I ran < for 10 min
cc <- ConsensusClusterPlus(d = indata, 
                           maxK = 3, # 三类 # Three categories
                           reps = 1000, # 重抽样次数，可修改 # Number of resamples, modifiable
                           pItem = 0.8, # 列维度抽样概率，可修改 # Column dimension sampling probability, modifiable
                           pFeature = 1, # 行维度抽样概率，可修改 # Row dimension sampling probability, modifiable 
                           clusterAlg = "pam", # 聚类算法，可修改 # Clustering algorithm, modifiable
                           innerLinkage = "ward.D", # 内部链接函数，可修改 # Internal link function, modifiable
                           finalLinkage = "ward.D", # 最终链接函数，可修改 # Last-link function, modifiable
                           distance = "euclidean", # 距离测度，可修改 # Distance measurement, modifiable
                           seed = 19991018,
                           title = "ConsensusCluster",
                           plot = "pdf")
ICIcluster <- cc[[3]]$consensusClass

# 为生存分析作准备
# Prepare for survival analysis
comsam <- intersect(rownames(combined.surv),colnames(indata))
combined.surv[comsam,"ICIcluster"] <- ifelse(ICIcluster[comsam] == 1, "A", # 这里把有生存信息的数据的ICIcluster补上以便后面进行生存分析 # # Here we add the ICIcluster with survival information for survival analysis later
                                             ifelse(ICIcluster[comsam] == 2, "B", "C"))
开始画图
热图
Start drawing
Heatmap
# 设置颜色
# Set the color

blue <- "#2874C5"
yellow <- "#EABF00"
green <- "#008B8A"
red <- "#E21F26"

# 生成热图
# Generate a heatmap
annCol <- data.frame(ICIcluster = ifelse(ICIcluster == 1,"A", ifelse(ICIcluster == 2, "B", "C")),
                     Project = rep(c("TCGA","GSE41613","GSE65858"),c(ncol(tcga.expr),ncol(gse41613.expr),ncol(gse65858.expr))),
                     stringsAsFactors = F)
annCol <- annCol[order(annCol$ICIcluster,annCol$Project),] # 这里对每个ICIcluster内部的cohort进行排序，使得相同cohort的样本彼此靠近 # Here the cohorts inside each ICIcluster are sorted so that the samples of the same cohort are close to each other

annColors <- list()
annColors[["ICIcluster"]] <- c("A" = red,
                               "B" = blue,
                               "C" = yellow)

annColors[["Project"]] <- c("TCGA" = red,
                            "GSE41613" = blue,
                            "GSE65858" = yellow)

plotdata <- standarize.fun(indata,halfwidth = 2) # 数据标准化并截断极端值 # Data is normalized and truncated to extreme values
pheatmap(plotdata[,rownames(annCol)],
         cluster_cols = F,
         color = NMF:::ccRamp(c("#282B71","white","#CF2221"),64),
         show_rownames = T,
         show_colnames = F,
         annotation_col = annCol[,c("ICIcluster","Project"),drop = F],
         annotation_colors = annColors,
         treeheight_col = 0,
         treeheight_row = 0,
         filename = "ICIcluster.pdf")
生存分析
Survival Analysis
fitd <- survdiff(Surv(OS.time, OS) ~ ICIcluster,
                 data      = combined.surv,
                 na.action = na.exclude)
p.val <- 1 - pchisq(fitd$chisq, length(fitd$n) - 1)
fit <- survfit(Surv(OS.time, OS)~ ICIcluster,
               data      = combined.surv,
               type      = "kaplan-meier",
               error     = "greenwood",
               conf.type = "plain",
               na.action = na.exclude)

# hack strata for better survival curve
names(fit$strata) <- gsub("ICIcluster=", "", names(fit$strata))

# kaplan-meier curve
p <- ggsurvplot(fit               = fit,
                conf.int          = FALSE,
                risk.table        = TRUE,
                risk.table.col    = "strata",
                palette           = c(red, blue, yellow),
                data              = combined.surv,
                size              = 1,
                xlim              = c(0,120),
                break.time.by     = 20,
                legend.title      = "",
                pval              = FALSE, # 不计算p值，改为手动添加 # The p-value is not calculated, and is added manually
                surv.median.line  = "hv",
                xlab              = "Time (month)",
                ylab              = "Survival probability",
                risk.table.y.text = FALSE)
p.lab <- paste0("Log rank test P", # p值文本 # P-value text
                ifelse(p.val < 0.001, " < 0.001",
                       paste0(" = ",round(p.val, 3))))

p$plot <- p$plot + annotate("text", # 手动添加例文样式的p值 # Manually add the p-value of the example style
                            x = 70, 
                            y = 0.55,
                            hjust = 0,
                            fontface = 4,
                            label = p.lab)
p$plot
pdf.options(reset = TRUE, onefile = FALSE)
pdf("km curve of ICIcluster.pdf", width = 5, height = 6)
print(p)
dev.off()
Session Info
sessionInfo()
FigureYa147interaction
FigureYa147interaction
Author(s)
: Zongcheng Li
Reviewer(s)
: Ying Ge, Junyi Shen
Date
: 2025-09-22
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Requirements description
用interaction文件作为输入画调控网络图，线的长短与相互作用score对应，线的数量和颜色与证据对应。
Use the interaction file as input to draw a regulatory network diagram.
The length of the line corresponds to the interaction score, and the
number and color of the line correspond to the evidence.
出自
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4951236
From
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4951236
这篇文章用matlab写了个脚本OncoBinder.m，free
online，能根据多种数据找interaction、打分、画图，感兴趣的小伙伴写信给文章作者吧～
This article uses Matlab to write a script OncoBinder.m, which is free
online and can find interactions, score, and draw diagrams based on a
variety of data. Interested friends can write to the author of the
article~
出自
https://www.nature.com/articles/s41589-018-0161-x
Fig. 1 | Identification of HIP1R as a regulator of PD-L1. a,
Schematic representation of the identification process. A set of
low-confidence interactors of PD-L1 according to high-throughput assays
(left panel) were analyzed by the OncoBinder model (middle panel) to
identify functionally relevant interactions. The ‘co-activation’ scores
of candidate interactors are plotted in the right panel, with
statistically significant associations marked in red (P < 0.01,
Pearson correlation, two-sided). The modeling experiment was replicated
for three times with the same results obtained.
图的解析
Analysis of the graph
用改写的OncoBinder（没有提供脚本）找interaction并画图。中央是PD-L1，周围是跟它有相互作用关系的蛋白质。
Use the rewritten OncoBinder (no script provided) to find the
interaction and draw the graph. PD-L1 is in the center, and the proteins
that interact with it are around it.
Figure legend和正文都没有描述线的长短和数量与哪个特征相对应。 Neither
the figure legend nor the text describes which feature the length and
number of lines correspond to.
我们结合这两幅图设计了下面的图，设计思路看这篇：
https://mp.weixin.qq.com/s/cQzsw1DKTUqooBmE078k2A
We
combined these two graphs to design the following graph. For the design
ideas, see this article:
https://mp.weixin.qq.com/s/cQzsw1DKTUqooBmE078k2A
应用场景
Application scenarios
展示相互作用关系，同时展示相互作用证据的来源和打分。 Show the
interaction relationship, and at the same time show the source and score
of the interaction evidence.
像例文中的蛋白相互作用，或转录因子-靶基因，或miRNA-靶基因的关系。
Like the protein interaction in the example text, or the relationship
between transcription factor-target gene, or miRNA-target gene.
其中转录因子-靶基因的关系可以这样设计：中央画转录因子，周围画靶基因；连线代表各种证据例如有motif、有ATAC-seq的peak、有H3K27ac的peak等等；自己给这些证据权重，计算一个总体的打分作为连线的长度。
The relationship between transcription factor-target gene can be
designed as follows: draw the transcription factor in the center and the
target gene around it; the connecting line represents various evidences
such as motif, ATAC-seq peak, H3K27ac peak, etc.; give these evidence
weights by yourself and calculate an overall score as the length of the
connecting line.
环境设置
Environment settings
source("install_dependencies.R")
Load package
library(org.Hs.eg.db)
library(clusterProfiler)
library(ggplot2)
library(reshape2)
library(igraph)
library(magrittr)

Sys.setenv(LANGUAGE = "en") #显示英文报错信息 #Display English error message
options(stringsAsFactors = FALSE) #禁止chr转成factor #Disable chr conversion to factor
自定义画图函数 Custom drawing function
fcircle
is built for the white background of PD-L1
mycircle <- function(coords, v=NULL, params) {
  vertex.color <- params("vertex", "color")
  if (length(vertex.color) != 1 && !is.null(v)) {
    vertex.color <- vertex.color[v]
  }
  vertex.size  <- 1/200 * params("vertex", "size")
  if (length(vertex.size) != 1 && !is.null(v)) {
    vertex.size <- vertex.size[v]
  }
  vertex.frame.color <- params("vertex", "frame.color")
  if (length(vertex.frame.color) != 1 && !is.null(v)) {
    vertex.frame.color <- vertex.frame.color[v]
  }
  vertex.frame.width <- params("vertex", "frame.width")
  if (length(vertex.frame.width) != 1 && !is.null(v)) {
    vertex.frame.width <- vertex.frame.width[v]
  }
  
  mapply(coords[,1], coords[,2], vertex.color, vertex.frame.color,
         vertex.size, vertex.frame.width,
         FUN=function(x, y, bg, fg, size, lwd) {
           symbols(x=x, y=y, bg=bg, fg=fg, lwd=lwd,
                   circles=size, lheight = 30, add=TRUE, inches=FALSE)
         })
}

add.vertex.shape("fcircle", clip=igraph.shape.noclip,
         plot=mycircle, parameters=list(vertex.frame.color=1,
                                  vertex.frame.width=1))
参数设置
Parameter settings
# Give your focus official gene_symbol
sourceGene <- "CD274"

# Given name will be shown on the plot instead.
sourceName <- "PD-L1"
输入文件
Input file
如果你已经获得interaction关系，就把自己的数据整理成easy_input.csv文件的格式，跳过这步，直接进入“开始画图”。
If you have already obtained the interaction relationship, organize your
data into the format of easy_input.csv file, skip this step and go
directly to “Start drawing”.
相互作用文件的下载
Download interaction file
数据库。这里用ComPPI数据库检索interaction：Compartmentalized
Protein-Protein Interaction Database | v2.1.1,
http://comppi.linkgroup.hu/protein_search
，适用于人、果蝇、线虫和酵母。
Database. Here, we use the ComPPI database to search for
interactions: Compartmentalized Protein-Protein Interaction Database |
v2.1.1,
http://comppi.linkgroup.hu/protein_search
, which is
suitable for humans, fruit flies, nematodes and yeast.
其他物种可以用STRING检索，也有score。找更复杂的相互作用关系可参考FigureYa53PPI，用cytoscape画图可参考FigureYa54cytoscape。
Other species can be searched with STRING, and there is also score. For
more complex interaction relationships, please refer to FigureYa53PPI,
and for drawing with cytoscape, please refer to FigureYa54cytoscape.
检索蛋白质”CD274”
Search for protein “CD274”
下载interaction文件。As the result of your search query, the
following two proteins were found.
Download interaction file. As the result of your search query, the
following two proteins were found.
Q9NZQ7 (UniProtKB-AC) Programmed cell death 1 ligand 1
Q0GN75 (UniProtKB-AC) CD274
I chose Q0GN75 for use.
Download file “comppi–interactors_of_Q9NZQ7.txt”.
http://comppi.linkgroup.hu/protein_search/interactors/Q0GN75/download
输入数据的整理
Input data sorting
comppi–interactors_of_Q0GN75.txt，上一步获得的interaction信息。每行一个蛋白质，所有证据和分数都在Major.Loc.With.Loc.Score里面，用｜分隔，需要拆开成每条证据单独一行。
comppi–interactors_of_Q0GN75.txt, interaction information obtained in
the previous step. One protein per line, all evidence and scores are in
Major.Loc.With.Loc.Score, separated by |, need to be split into a
separate line for each piece of evidence.
idata <- read.table(file = "comppi--interactors_of_Q0GN75.txt", sep = "\t", header = T, quote = "")
idata[1:4,]
# 提取各种证据及其对应的score，每个证据单独一行
# Extract various evidences and their corresponding scores, each evidence in a separate line
ilinks <- NULL
for(i in 1:nrow(idata)){
  for(j in strsplit(idata$Major.Loc.With.Loc.Score[i], split = "\\|")[[1]]){
    tmp <- strsplit(j, split = "\\(")[[1]]
    ilinks <- rbind(ilinks, c(idata$Interactor[i], 
                              tmp[1],
                              gsub(pattern = "\\)", "", tmp[2])))
  }
}
colnames(ilinks) <- c("Interactor", "Loc","LocScore")
ilinks <- as.data.frame(ilinks)
head(ilinks)
# filter out outlier link
# 这里提取以下6种，实际应用时根据你自己的数据修改
# Extract the following 6 types here, modify according to your own data in actual application
ilinks <- ilinks[ilinks$Loc %in% c("Cytosol", "Secretory-pathway", "Extracellular", "Membrane","Mitochondrion", "Nucleus"),]

# convert uniprot id to gene symbol
idMap <- bitr(idata$Interactor, "UNIPROT", toType = "SYMBOL", OrgDb = org.Hs.eg.db)
ilinks$gene <- idMap$SYMBOL[match(ilinks$Interactor, idMap$UNIPROT)]

# 根据网页提供的公式计算相互作用打分：
# Calculate the interaction score according to the formula provided on the web page:
# http://comppi.linkgroup.hu/help/scores
ilinks$LocScore <- as.numeric(ilinks$LocScore)
locScoreMat <- dcast(ilinks, formula = gene ~Loc, value.var = "LocScore", fun.aggregate = mean)
locScoreMat[is.na(locScoreMat)] <- 0
rownames(locScoreMat) <- locScoreMat$gene
locScoreMat <- locScoreMat[,-1]
locScoreMat$InteractionScore <- 1- apply(locScoreMat[,1:6], 1, function(x) prod(1-x*locScoreMat[sourceGene,]))

# prepare network elements
ilinks$source <- sourceGene
ilinks$target <- ilinks$gene
links <- unique(ilinks[,c("source", "target", "Loc")]) # remove duplicated genes
links <- links[links$target  != sourceGene,] # remove sourceGene 
links$score <- locScoreMat[links$target, "InteractionScore"]

# 保存到文件
# Save to file
write.csv(links, "easy_input.csv", quote = F, row.names = F)
开始画图
Start drawing
用igraph画图 Drawing with igraph
# 读取相互作用关系和score
# Read the interaction relationship and score
links <- read.csv("easy_input.csv", header = T)
head(links)
net <- graph_from_data_frame(links, directed = F)
pal_loc <- setNames(RColorBrewer::brewer.pal(7, name = "Set3")[-2], 
                      sort(unique(links$Loc)))

# see plot.igraph for more settings 
vertexes <- get.vertex.attribute(net, "name")
net %<>% 
  set.vertex.attribute("label", 
                       value = ifelse(vertexes == sourceGene, 
                                      sourceName, vertexes)) %<>%
  set.edge.attribute("color", 
                     value = pal_loc[links$Loc]) %<>%
  set.edge.attribute("weight", 
                     value = links$score)
set.seed(777)
lay <- layout_with_dh(net) #weight.node.dist = unique(links[,c("target","score")])$score) # weight here may be invalid!

# plot in SVG device, then you may use Adobe Illustrator 
# to fine tune the network map. 
# Such as adjust the text position to avoid overlapping.

pdf(file = "interaction.pdf", width = 6, height = 6)
plot(net, layout = lay, 
     vertex.shape = 'fcircle',
     vertex.size = ifelse(vertexes == sourceGene, 15, 3),
     vertex.color = "hotpink",
     vertex.frame.color = ggplot2::alpha("white", alpha = 0.5),
     vertex.frame.width = ifelse(vertexes == sourceGene, 30, 0.1),
     vertex.label.color = ifelse(vertexes == sourceGene, "black", "grey30"),
     vertex.label.family = "sans",
     vertex.label.cex = ifelse(vertexes == sourceGene, 0.9, 0.6),
     edge.curved = curve_multiple(net, start = 0.06)) 
     # fine tune "start" to get better visual effect. To shrink multiple edges using smaller value.
legend(-1, -1, legend= names(pal_loc),
       col= pal_loc, lty=1, cex=0.6,
       box.lty=1, box.lwd=1, box.col="black")
dev.off()
后期处理
Post-processing
Use Adobe Illustrator to fine tune the network map. Such as adjust
the text position to avoid overlapping.
Want to learn more about network visualization with R?
GO to
https://kateto.net/tutorials/
sessionInfo()
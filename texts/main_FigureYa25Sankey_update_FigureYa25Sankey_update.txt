FigureYa25Sankey_update
FigureYa25Sankey_update
Author(s)
: Ying Ge, Xiaofan Lu; Yijing Chen
Date
: 2025-09-22
Academic Citation
If you use this code in your work or research, we kindly request that
you cite our publication:
Xiaofan Lu, et al. (2025). FigureYa: A Standardized Visualization
Framework for Enhancing Biomedical Data Interpretation and Research
Efficiency. iMetaMed.
https://doi.org/10.1002/imm3.70005
需求描述
Requirement description
用R代码画出paper里的图。
Use R code to draw the plot in paper.
出自
https://www.nature.com/articles/nature22973
from
https://www.nature.com/articles/nature22973
应用场景
Application scenario
一套数据集可能有多重属性，每层属性之间有交叉，就可以用这种图来展示。另外，以第一变量为参照，往后的多层变量均参考与第一变量的关系，从而展示第一变量的流向。
场景一：一个group包含多个基因，同一个基因的不同突变可能属于多个group。像例图一样，展示高频突变基因所处的分组。
原文：Graphical summary of the most frequently mutated genes (≥10
affected cases) and their subgroup distribution.
… many of which showed clear subgroup-specificity (Fig. 2a–c;
Extended Data Fig. 3a, b; Supplementary Table 2).
场景二：miRNA和靶基因的关系，可参考群里小伙伴的用法：
https://onlinelibrary.wiley.com/doi/full/10.1002/jcp.28522
场景三：人群按性别、年龄、家族史等特征分组，展示不同分组得癌症的规律。
A dataset may have multiple attributes, and when there is an overlap
between each layer of attributes, this type of plot can be used to
display it. Additionally, using the first variable as a reference,
subsequent multi-layer variables are all based on their relationship
with the first variable, thereby illustrating the flow of the first
variable.
Scenario 1: A group contains multiple genes, and different mutations
of the same gene may belong to multiple groups. Display the groups
containing high-frequency mutated genes, as shown in the example
image.
Original text: Graphical summary of the most frequently mutated genes
(≥10 affected cases) and their subgroup distribution.
… many of which showed clear subgroup-specificity (Fig. 2a–c;
Extended Data Fig. 3a, b; Supplementary Table 2).
Scenario 2: The relationship between miRNAs and target genes,
please refer to the usage of the group:
https://onlinelibrary.wiley.com/doi/full/10.1002/jcp.28522
.
Scenario 3: The population is grouped by gender, age, family
history and other characteristics, to show the pattern of cancer in
different groups.
环境设置
Environment setting
source("install_dependencies.R")
library(ggalluvial)
library(dplyr)
Sys.setenv(LANGUAGE = "en") #显示英文报错信息 display English error messages
options(stringsAsFactors = FALSE) #禁止chr转成factor prohibit the conversion of chr to factor
输入数据
Input data
easy_input.txt，至少要有两列，想画出几列就提供几列数据。此处第一列是基因，第二列是突变，第三列是癌症亚型；想画更多层次关系就继续向后添加列。
或者只写两列，第一列是miRNA，第二列是它的靶基因。
easy_input.txt, there should be at least two columns; provide as many
columns of data as you want to draw. Here the first column is the gene,
the second is the mutation, and the third is the cancer subtype; keep
adding columns backwards if you want to draw more hierarchical
relationships.
Or just write two columns, with the first column being the miRNA and
the second column being its target gene.
df <- read.table("easy_input.txt",sep = "\t",row.names = 1,header = T)
head(df)
#定义足够多的颜色，后面从这里选颜色
#define enough colors to pick colors from later
mycol <- rep(c("#223D6C","#D20A13","#FFD121","#088247","#11AA4D","#58CDD9","#7A142C","#5D90BA","#029149","#431A3D","#91612D","#6E568C","#E0367A","#D8D155","#64495D","#7CC767"),2)
开始画图
Start drawing
两种方式展示前后关系：
后一层继承前一层的关系；
后面多层继承第一层的关系。
Two ways to show the before and after relationships:
The latter layer inherits the relationship of the former layer;
Multiple layers behind inherit the relationship of the first
layer.
后一层继承前一层的关系
The latter layer inherits the relationship of the former layer
#格式转换
#format conversion
UCB_lodes <- to_lodes_form(df[,1:ncol(df)],
                           key = "Gene",
                           axes = 1:ncol(df),
                           id = "Cohort")
dim(UCB_lodes)
head(UCB_lodes)
tail(UCB_lodes)
ggplot(UCB_lodes,
       aes(x = Gene, stratum = stratum, alluvium = Cohort,
           fill = stratum, label = stratum)) +
  scale_x_discrete(expand = c(0, 0)) + 
  geom_flow(width = 1/8) + #线跟方块间空隙的宽窄 the width of the gap between the line and the square
  geom_stratum(alpha = .9,width = 1/10) + #方块的透明度、宽度 transparency, width of the square
  geom_text(stat = "stratum", size = 3, color="black") + #文字大小、颜色 text size, color
  
  #不喜欢默认的配色方案，用前面自己写的配色方案
  #If you don't like the default color scheme, use the one you created earlier
  scale_fill_manual(values = mycol) +

  xlab("") + ylab("") +
  theme_bw() + #去除背景色 remove background color
  theme(panel.grid =element_blank()) + #去除网格线 remove gridlines
  theme(panel.border = element_blank()) + #去除外层边框 remove outer border
  theme(axis.line = element_blank(),axis.ticks = element_blank(),axis.text = element_blank()) + #去掉坐标轴 remove the axes
  ggtitle("")+
  guides(fill = FALSE)
ggsave("sankey_stratum_3.pdf")
可以只选其中一部分列来画，此处只画第一列和第三列
You can select only some of the columns to draw, here only the first
and third columns are drawn
UCB_lodes <- to_lodes_form(df[,c(1,3)],
                           key = "Gene",
                           axes = 1:2,
                           id = "Cohort")
dim(UCB_lodes)
ggplot(UCB_lodes,
       aes(x = Gene, stratum = stratum, alluvium = Cohort,
           fill = stratum, label = stratum)) +
  scale_x_discrete(expand = c(0, 0)) + 
  
  #用aes.flow参数控制线从哪边来，颜色就跟哪边一致。
  #默认是forward，此处用backward。
  #use the aes.flow parameter to control the side from which the line originates, and the color will correspond to that side.
  #default is forward, use backward here.
  geom_flow(width = 1/8,aes.flow = "backward") +
  
  coord_flip() + #旋转90度 rotate 90 degrees
  geom_stratum(alpha = .9,width = 1/10) +
  geom_text(stat = "stratum", size = 3,color="black") +

  #如果分组少，可以用scale_fill_brewer。修改type和palette两个参数选择配色方案，更多配色方案参考下图，分别对应type参数的“Seq”、“qual”、“Div”
  #If there are fewer groups, you can use scale_fill_brewer. Adjust the type and palette parameters to choose the color scheme., and refer to the following figure for more color schemes, corresponding to the type parameter's "Seq", "Qual", "Div" respectively.
  #scale_fill_brewer(type = "Div", palette = "BrBG") +
  
  #如果分组太多，就要用前面自己写的配色方案
  #If there are too many groups, you have to use the color scheme you wrote earlier on your own
  scale_fill_manual(values = mycol) +

  xlab("") + ylab("") +
  theme_bw() + 
  theme(panel.grid =element_blank()) + 
  theme(panel.border = element_blank()) + 
  theme(axis.line.x = element_blank(),axis.ticks = element_blank(),axis.text.x = element_blank()) + #显示分组名字 show group name
  ggtitle("") +
  guides(fill = FALSE)
ggsave("sankey_stratum_2.pdf")
后面多层继承第一层的关系（作者：Xiaofan Lu）
Multiple layers behind inherit the relationship of the first
layer
用到参数：stat = “alluvium”，即传说中的“冲击图”
此时，只有连线有颜色，每层特征列就无法填充颜色了。
Using the parameter: stat = “alluvium”, which refers to the legendary
“alluvial chart”.
At this point, only the connecting lines are colored, and the feature
columns at each level are not filled with color.
subdf <- df

# 计算频率
# calculate frequency
subdf <- subdf %>% 
  group_by(gene, mutation, subtype) %>% #如果有更多列，就在括号里继续添加列名 If there are more columns, continue adding column names in parentheses
  tally(name = "Freq") %>% 
  as.data.frame()
head(subdf)
ggplot(as.data.frame(subdf),
       aes(y = Freq,
           axis1 = gene, 
           axis2 = mutation, 
           axis3 = subtype)) + #这里画三列，如果有更多列，就继续添加，例如axis4 = 列名 Here draw three columns, if there are more columns, continue to add, for example axis4 = column name
  scale_fill_manual(values = mycol) + 
  ggalluvial::geom_flow(stat = "alluvium",width = 1/8,aes(fill = gene)) +
  geom_stratum(width = 1/8, reverse = T) +
  geom_text(stat = "stratum", size = 3, aes(label = after_stat(stratum)),
            reverse = T) +
  scale_x_continuous(breaks = 1:3, labels = c("gene", "mutation", "subtype")) +
  
  theme(legend.position = "bottom", #底部画图例 draw legend at bottom
        legend.title = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank(),
        axis.text.x = element_text(size = 12, face = "bold", color = "black")) +
  
  xlab("") + ylab("") +
  theme_bw() + #去除背景色 remove background color
  theme(panel.grid =element_blank()) + #去除网格线 remove gridlines
  theme(panel.border = element_blank()) + #去除外层边框 remove outer border
  theme(axis.line = element_blank(),axis.ticks = element_blank(), #不画xy轴 do not draw the xy-axis
        axis.text.y = element_blank()) + # 只保留x轴label keep only the x-axis label
  ggtitle("")
ggsave("sankey_alluvium.pdf")
Sessioninfo
sessionInfo()